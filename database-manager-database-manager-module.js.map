{"version":3,"sources":["./node_modules/@ngrx/router-store/fesm5/router-store.js","./src/app/database-manager/components/db-connections/db-connections.component.html","./src/app/database-manager/components/import-csv/import-csv.component.html","./src/app/database-manager/components/manager-layout/manager-layout.component.html","./src/app/database-manager/components/preview-data/preview-data.component.html","./src/app/database-manager/components/rows-count/rows-count.component.html","./src/app/database-manager/components/sql-object-content/sql-object-content.component.html","./src/app/database-manager/components/sql-objects/sql-objects.component.html","./src/app/database-manager/components/sql-query/sql-query.component.html","./src/app/database-manager/components/sql-view-object/sql-view-object.component.html","./src/app/database-manager/components/table-data/table-data.component.html","./src/app/database-manager/components/table-editor/table-editor.component.html","./src/app/database-manager/components/view-editor/view-editor.component.html","./src/app/database-manager/components/db-connections/db-connections.component.scss","./src/app/database-manager/components/db-connections/db-connections.component.ts","./src/app/database-manager/components/import-csv/import-csv.component.scss","./src/app/database-manager/components/import-csv/import-csv.component.ts","./src/app/database-manager/components/manager-layout/manager-layout.component.scss","./src/app/database-manager/components/manager-layout/manager-layout.component.ts","./src/app/database-manager/components/preview-data/preview-data.component.scss","./src/app/database-manager/components/preview-data/preview-data.component.ts","./src/app/database-manager/components/rows-count/rows-count.component.scss","./src/app/database-manager/components/rows-count/rows-count.component.ts","./src/app/database-manager/components/sql-object-content/sql-object-content.component.scss","./src/app/database-manager/components/sql-object-content/sql-object-content.component.ts","./src/app/database-manager/components/sql-objects/sql-objects.component.scss","./src/app/database-manager/components/sql-objects/sql-objects.component.ts","./src/app/database-manager/components/sql-query/sql-query.component.scss","./src/app/database-manager/components/sql-query/sql-query.component.ts","./src/app/database-manager/components/sql-view-object/sql-view-object.component.scss","./src/app/database-manager/components/sql-view-object/sql-view-object.component.ts","./src/app/database-manager/components/table-data/table-data.component.scss","./src/app/database-manager/components/table-data/table-data.component.ts","./src/app/database-manager/components/table-editor/table-editor.component.ts","./src/app/database-manager/components/view-editor/view-editor.component.scss","./src/app/database-manager/components/view-editor/view-editor.component.ts","./src/app/database-manager/database-manager-routing.module.ts","./src/app/database-manager/database-manager.module.ts","./src/app/database-manager/guards/connection.guard.ts","./src/app/database-manager/preprocessor.ts","./src/app/database-manager/store/actions/index.ts","./src/app/database-manager/store/actions/sql-object.ts","./src/app/database-manager/store/actions/sql-objects.ts","./src/app/database-manager/store/effects/index.ts","./src/app/database-manager/store/effects/sql-object.ts","./src/app/database-manager/store/index.ts","./src/app/database-manager/store/reducers/index.ts","./src/app/database-manager/store/reducers/sql-object.ts","./src/app/database-manager/store/reducers/sql-objects.ts","./src/app/database-manager/store/selectors/index.ts","./src/app/database-manager/store/selectors/sql-object.ts","./src/app/database-manager/utils.ts","./src/environments/environment.extension.ts","./src/environments/environment.prod.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC0E;AACK;AAC+C;AAClE;AACZ;;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gCAAgC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,gCAAgC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD,yBAAyB,4DAAc;AACvC,wBAAwB,4DAAc;AACtC;AACA;AACA,WAAW,sDAAQ,EAAE,+IAA+I;AACpK;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iCAAiC;AAC3C,UAAU;AACV;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,iBAAiB,4CAA4C;AAC7D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAM,iBAAiB,qEAAc;AACvD;AACA,qBAAqB,oDAAM;AAC3B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,+DAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,qEAAc;AAChC;AACA,qBAAqB,oDAAM;AAC3B;AACA,iCAAiC,+DAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAgB;AACtD;AACA;AACA;AACA;AACA;AACA,sCAAsC,gEAAgB;AACtD;AACA;AACA;AACA,sCAAsC,+DAAe;AACrD;AACA;AACA;AACA,sCAAsC,6DAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA,uBAAuB,gEAAgB;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,+DAAe;AACtC,SAAS;AACT;AACA;AACA;AACA,qDAAqD,yCAAyC;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sDAAQ,EAAE,gCAAgC,YAAY;AAC/E,2BAA2B;AAC3B,yCAAyC;AACzC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,wDAAU;AAC5E,QAAQ,8DAAQ,GAAG;AACnB,QAAQ,qDAAO,IAAI,4DAAM;AACzB,QAAQ,wDAAU,uBAAuB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","file":"database-manager-database-manager-module.js","sourcesContent":["/**\n * @license NgRx 8.3.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { __assign, __read, __decorate, __param, __metadata } from 'tslib';\nimport { InjectionToken, NgModule, Inject, ErrorHandler } from '@angular/core';\nimport { NavigationStart, RoutesRecognized, NavigationCancel, NavigationError, NavigationEnd, Router } from '@angular/router';\nimport { select, Store, createSelector } from '@ngrx/store';\nimport { withLatestFrom } from 'rxjs/operators';\n\n/**\n * An action dispatched when a router navigation request is fired.\n */\nvar ROUTER_REQUEST = '@ngrx/router-store/request';\n/**\n * An action dispatched when the router navigates.\n */\nvar ROUTER_NAVIGATION = '@ngrx/router-store/navigation';\n/**\n * An action dispatched when the router cancels navigation.\n */\nvar ROUTER_CANCEL = '@ngrx/router-store/cancel';\n/**\n * An action dispatched when the router errors.\n */\nvar ROUTER_ERROR = '@ngrx/router-store/error';\n/**\n * An action dispatched after navigation has ended and new route is active.\n */\nvar ROUTER_NAVIGATED = '@ngrx/router-store/navigated';\n\nfunction routerReducer(state, action) {\n    // Allow compilation with strictFunctionTypes - ref: #1344\n    var routerAction = action;\n    switch (routerAction.type) {\n        case ROUTER_NAVIGATION:\n        case ROUTER_ERROR:\n        case ROUTER_CANCEL:\n            return {\n                state: routerAction.payload.routerState,\n                navigationId: routerAction.payload.event.id,\n            };\n        default:\n            return state;\n    }\n}\n\nvar RouterStateSerializer = /** @class */ (function () {\n    function RouterStateSerializer() {\n    }\n    return RouterStateSerializer;\n}());\n\nvar DefaultRouterStateSerializer = /** @class */ (function () {\n    function DefaultRouterStateSerializer() {\n    }\n    DefaultRouterStateSerializer.prototype.serialize = function (routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    };\n    DefaultRouterStateSerializer.prototype.serializeRoute = function (route) {\n        var _this = this;\n        var children = route.children.map(function (c) { return _this.serializeRoute(c); });\n        return {\n            params: route.params,\n            paramMap: route.paramMap,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            routeConfig: route.routeConfig\n                ? {\n                    component: route.routeConfig.component,\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                }\n                : null,\n            queryParams: route.queryParams,\n            queryParamMap: route.queryParamMap,\n            fragment: route.fragment,\n            component: (route.routeConfig\n                ? route.routeConfig.component\n                : undefined),\n            root: undefined,\n            parent: undefined,\n            firstChild: children[0],\n            pathFromRoot: undefined,\n            children: children,\n        };\n    };\n    return DefaultRouterStateSerializer;\n}());\n\nvar MinimalRouterStateSerializer = /** @class */ (function () {\n    function MinimalRouterStateSerializer() {\n    }\n    MinimalRouterStateSerializer.prototype.serialize = function (routerState) {\n        return {\n            root: this.serializeRoute(routerState.root),\n            url: routerState.url,\n        };\n    };\n    MinimalRouterStateSerializer.prototype.serializeRoute = function (route) {\n        var _this = this;\n        var children = route.children.map(function (c) { return _this.serializeRoute(c); });\n        return {\n            params: route.params,\n            data: route.data,\n            url: route.url,\n            outlet: route.outlet,\n            routeConfig: route.routeConfig\n                ? {\n                    path: route.routeConfig.path,\n                    pathMatch: route.routeConfig.pathMatch,\n                    redirectTo: route.routeConfig.redirectTo,\n                    outlet: route.routeConfig.outlet,\n                }\n                : null,\n            queryParams: route.queryParams,\n            fragment: route.fragment,\n            firstChild: children[0],\n            children: children,\n        };\n    };\n    return MinimalRouterStateSerializer;\n}());\n\nvar NavigationActionTiming;\n(function (NavigationActionTiming) {\n    NavigationActionTiming[NavigationActionTiming[\"PreActivation\"] = 1] = \"PreActivation\";\n    NavigationActionTiming[NavigationActionTiming[\"PostActivation\"] = 2] = \"PostActivation\";\n})(NavigationActionTiming || (NavigationActionTiming = {}));\nvar _ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Internal Configuration');\nvar ROUTER_CONFIG = new InjectionToken('@ngrx/router-store Configuration');\nvar DEFAULT_ROUTER_FEATURENAME = 'router';\nfunction _createRouterConfig(config) {\n    return __assign({ stateKey: DEFAULT_ROUTER_FEATURENAME, serializer: DefaultRouterStateSerializer, navigationActionTiming: NavigationActionTiming.PreActivation }, config);\n}\nvar RouterTrigger;\n(function (RouterTrigger) {\n    RouterTrigger[RouterTrigger[\"NONE\"] = 1] = \"NONE\";\n    RouterTrigger[RouterTrigger[\"ROUTER\"] = 2] = \"ROUTER\";\n    RouterTrigger[RouterTrigger[\"STORE\"] = 3] = \"STORE\";\n})(RouterTrigger || (RouterTrigger = {}));\n/**\n * Connects RouterModule with StoreModule.\n *\n * During the navigation, before any guards or resolvers run, the router will dispatch\n * a ROUTER_NAVIGATION action, which has the following signature:\n *\n * ```\n * export type RouterNavigationPayload = {\n *   routerState: SerializedRouterStateSnapshot,\n *   event: RoutesRecognized\n * }\n * ```\n *\n * Either a reducer or an effect can be invoked in response to this action.\n * If the invoked reducer throws, the navigation will be canceled.\n *\n * If navigation gets canceled because of a guard, a ROUTER_CANCEL action will be\n * dispatched. If navigation results in an error, a ROUTER_ERROR action will be dispatched.\n *\n * Both ROUTER_CANCEL and ROUTER_ERROR contain the store state before the navigation\n * which can be used to restore the consistency of the store.\n *\n * Usage:\n *\n * ```typescript\n * @NgModule({\n *   declarations: [AppCmp, SimpleCmp],\n *   imports: [\n *     BrowserModule,\n *     StoreModule.forRoot(mapOfReducers),\n *     RouterModule.forRoot([\n *       { path: '', component: SimpleCmp },\n *       { path: 'next', component: SimpleCmp }\n *     ]),\n *     StoreRouterConnectingModule.forRoot()\n *   ],\n *   bootstrap: [AppCmp]\n * })\n * export class AppModule {\n * }\n * ```\n */\nvar StoreRouterConnectingModule = /** @class */ (function () {\n    function StoreRouterConnectingModule(store, router, serializer, errorHandler, config) {\n        this.store = store;\n        this.router = router;\n        this.serializer = serializer;\n        this.errorHandler = errorHandler;\n        this.config = config;\n        this.lastEvent = null;\n        this.trigger = RouterTrigger.NONE;\n        this.stateKey = this.config.stateKey;\n        this.setUpStoreStateListener();\n        this.setUpRouterEventsListener();\n    }\n    StoreRouterConnectingModule_1 = StoreRouterConnectingModule;\n    StoreRouterConnectingModule.forRoot = function (config) {\n        if (config === void 0) { config = {}; }\n        return {\n            ngModule: StoreRouterConnectingModule_1,\n            providers: [\n                { provide: _ROUTER_CONFIG, useValue: config },\n                {\n                    provide: ROUTER_CONFIG,\n                    useFactory: _createRouterConfig,\n                    deps: [_ROUTER_CONFIG],\n                },\n                {\n                    provide: RouterStateSerializer,\n                    useClass: config.serializer\n                        ? config.serializer\n                        : config.routerState === 1 /* Minimal */\n                            ? MinimalRouterStateSerializer\n                            : DefaultRouterStateSerializer,\n                },\n            ],\n        };\n    };\n    StoreRouterConnectingModule.prototype.setUpStoreStateListener = function () {\n        var _this = this;\n        this.store\n            .pipe(select(this.stateKey), withLatestFrom(this.store))\n            .subscribe(function (_a) {\n            var _b = __read(_a, 2), routerStoreState = _b[0], storeState = _b[1];\n            _this.navigateIfNeeded(routerStoreState, storeState);\n        });\n    };\n    StoreRouterConnectingModule.prototype.navigateIfNeeded = function (routerStoreState, storeState) {\n        var _this = this;\n        if (!routerStoreState || !routerStoreState.state) {\n            return;\n        }\n        if (this.trigger === RouterTrigger.ROUTER) {\n            return;\n        }\n        if (this.lastEvent instanceof NavigationStart) {\n            return;\n        }\n        var url = routerStoreState.state.url;\n        if (this.router.url !== url) {\n            this.storeState = storeState;\n            this.trigger = RouterTrigger.STORE;\n            this.router.navigateByUrl(url).catch(function (error) {\n                _this.errorHandler.handleError(error);\n            });\n        }\n    };\n    StoreRouterConnectingModule.prototype.setUpRouterEventsListener = function () {\n        var _this = this;\n        var dispatchNavLate = this.config.navigationActionTiming ===\n            NavigationActionTiming.PostActivation;\n        var routesRecognized;\n        this.router.events\n            .pipe(withLatestFrom(this.store))\n            .subscribe(function (_a) {\n            var _b = __read(_a, 2), event = _b[0], storeState = _b[1];\n            _this.lastEvent = event;\n            if (event instanceof NavigationStart) {\n                _this.routerState = _this.serializer.serialize(_this.router.routerState.snapshot);\n                if (_this.trigger !== RouterTrigger.STORE) {\n                    _this.storeState = storeState;\n                    _this.dispatchRouterRequest(event);\n                }\n            }\n            else if (event instanceof RoutesRecognized) {\n                routesRecognized = event;\n                if (!dispatchNavLate && _this.trigger !== RouterTrigger.STORE) {\n                    _this.dispatchRouterNavigation(event);\n                }\n            }\n            else if (event instanceof NavigationCancel) {\n                _this.dispatchRouterCancel(event);\n                _this.reset();\n            }\n            else if (event instanceof NavigationError) {\n                _this.dispatchRouterError(event);\n                _this.reset();\n            }\n            else if (event instanceof NavigationEnd) {\n                if (_this.trigger !== RouterTrigger.STORE) {\n                    if (dispatchNavLate) {\n                        _this.dispatchRouterNavigation(routesRecognized);\n                    }\n                    _this.dispatchRouterNavigated(event);\n                }\n                _this.reset();\n            }\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterRequest = function (event) {\n        this.dispatchRouterAction(ROUTER_REQUEST, { event: event });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterNavigation = function (lastRoutesRecognized) {\n        var nextRouterState = this.serializer.serialize(lastRoutesRecognized.state);\n        this.dispatchRouterAction(ROUTER_NAVIGATION, {\n            routerState: nextRouterState,\n            event: new RoutesRecognized(lastRoutesRecognized.id, lastRoutesRecognized.url, lastRoutesRecognized.urlAfterRedirects, nextRouterState),\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterCancel = function (event) {\n        this.dispatchRouterAction(ROUTER_CANCEL, {\n            storeState: this.storeState,\n            event: event,\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterError = function (event) {\n        this.dispatchRouterAction(ROUTER_ERROR, {\n            storeState: this.storeState,\n            event: new NavigationError(event.id, event.url, \"\" + event),\n        });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterNavigated = function (event) {\n        var routerState = this.serializer.serialize(this.router.routerState.snapshot);\n        this.dispatchRouterAction(ROUTER_NAVIGATED, { event: event, routerState: routerState });\n    };\n    StoreRouterConnectingModule.prototype.dispatchRouterAction = function (type, payload) {\n        this.trigger = RouterTrigger.ROUTER;\n        try {\n            this.store.dispatch({\n                type: type,\n                payload: __assign({ routerState: this.routerState }, payload, { event: this.config.routerState === 1 /* Minimal */\n                        ? { id: payload.event.id, url: payload.event.url }\n                        : payload.event }),\n            });\n        }\n        finally {\n            this.trigger = RouterTrigger.NONE;\n        }\n    };\n    StoreRouterConnectingModule.prototype.reset = function () {\n        this.trigger = RouterTrigger.NONE;\n        this.storeState = null;\n        this.routerState = null;\n    };\n    var StoreRouterConnectingModule_1;\n    StoreRouterConnectingModule = StoreRouterConnectingModule_1 = __decorate([\n        NgModule({}),\n        __param(4, Inject(ROUTER_CONFIG)),\n        __metadata(\"design:paramtypes\", [Store,\n            Router,\n            RouterStateSerializer,\n            ErrorHandler, Object])\n    ], StoreRouterConnectingModule);\n    return StoreRouterConnectingModule;\n}());\n\nfunction getSelectors(selectState) {\n    var selectRouterState = createSelector(selectState, function (router) { return router && router.state; });\n    var selectCurrentRoute = createSelector(selectRouterState, function (routerState) {\n        if (!routerState) {\n            return undefined;\n        }\n        var route = routerState.root;\n        while (route.firstChild) {\n            route = route.firstChild;\n        }\n        return route;\n    });\n    var selectQueryParams = createSelector(selectCurrentRoute, function (route) { return route && route.queryParams; });\n    var selectQueryParam = function (param) {\n        return createSelector(selectQueryParams, function (params) { return params && params[param]; });\n    };\n    var selectRouteParams = createSelector(selectCurrentRoute, function (route) { return route && route.params; });\n    var selectRouteParam = function (param) {\n        return createSelector(selectRouteParams, function (params) { return params && params[param]; });\n    };\n    var selectRouteData = createSelector(selectCurrentRoute, function (route) { return route && route.data; });\n    var selectUrl = createSelector(selectRouterState, function (routerState) { return routerState && routerState.url; });\n    return {\n        selectCurrentRoute: selectCurrentRoute,\n        selectQueryParams: selectQueryParams,\n        selectQueryParam: selectQueryParam,\n        selectRouteParams: selectRouteParams,\n        selectRouteParam: selectRouteParam,\n        selectRouteData: selectRouteData,\n        selectUrl: selectUrl,\n    };\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { _ROUTER_CONFIG as ɵngrx_modules_router_store_router_store_a, _createRouterConfig as ɵngrx_modules_router_store_router_store_b, ROUTER_ERROR, ROUTER_CANCEL, ROUTER_NAVIGATION, ROUTER_NAVIGATED, ROUTER_REQUEST, routerReducer, StoreRouterConnectingModule, NavigationActionTiming, ROUTER_CONFIG, DEFAULT_ROUTER_FEATURENAME, RouterStateSerializer, DefaultRouterStateSerializer, MinimalRouterStateSerializer, getSelectors };\n//# sourceMappingURL=router-store.js.map\n","module.exports = \"<div class=\\\"btn-group align-self-center\\\" dropdown placement=\\\"bottom right\\\">\\n  <button id=\\\"connections-btn-group\\\" dropdownToggle class=\\\"btn btn-light dropdown-toggle btn-sm m-0\\\" type=\\\"button\\\"\\n    title=\\\"Select connection\\\" aria-controls=\\\"dropdown-menu-connections\\\" tabindex=\\\"0\\\" role=\\\"button\\\">\\n    {{ selectedConnection$ | async }}\\n    <span class=\\\"caret\\\"></span>\\n  </button>\\n\\n  <ul id=\\\"dropdown-menu-connections\\\" *dropdownMenu class=\\\"dropdown-menu dropdown-menu-right\\\" role=\\\"menu\\\" aria-labelledby=\\\"connections-btn-group\\\">\\n    <li role=\\\"menuitem\\\" *ngFor=\\\"let con of connections$ | async\\\">\\n      <a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"onConnectionSelect(con.connectorName)\\\">{{con.connectorName}}</a>\\n    </li>\\n  </ul>\\n</div>\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">Import CSV data</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body px-4 d-flex flex-column h-100\\\">\\n  <div class=\\\"row m-0\\\">\\n    <button type=\\\"button\\\" (click)=\\\"loadCSV()\\\" class=\\\"btn btn-primary mr-2\\\">Browse...</button>\\n    <div class=\\\"d-flex w-75\\\">\\n      <ng-container *ngIf=\\\"createTable$ | async\\\">\\n        <div class=\\\"form-group row m-0 w-50\\\">\\n          <label for=\\\"owner-name\\\" class=\\\"col-sm-4 col-form-label\\\">Owner name</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"metaData.objectOwner\\\" class=\\\"form-control\\\" id=\\\"owner-name\\\"\\n              placeholder=\\\"Owner\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group row m-0 w-50\\\">\\n          <label for=\\\"object-name\\\" class=\\\"col-sm-4 col-form-label\\\">Object name</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"metaData.objectName\\\" class=\\\"form-control\\\" id=\\\"object-name\\\"\\n              placeholder=\\\"Name\\\">\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!(createTable$ | async)\\\">\\n        <label for=\\\"object-name\\\" class=\\\"col-sm-2 col-form-label\\\">Import data into</label>\\n        <div class=\\\"btn-group\\\" dropdown>\\n          <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\"btn btn-light dropdown-toggle\\\"\\n            aria-controls=\\\"dropdown-basic\\\">\\n            {{getSelectedTableTitle()}}<span class=\\\"caret\\\"></span>\\n          </button>\\n          <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\n            <li role=\\\"menuitem\\\" *ngFor=\\\"let t of tables$ | async\\\">\\n              <a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"onTableSelect(t)\\\">{{t.objectOwner}}.{{t.objectName}}</a>\\n            </li>\\n          </ul>\\n        </div>\\n      </ng-container>\\n    </div>\\n    <div class=\\\"form-check form-check-inline\\\">\\n      <input class=\\\"form-check-input mr-2\\\" type=\\\"checkbox\\\" id=\\\"create-tabel\\\" [checked]=\\\"(createTable$ | async)\\\"\\n        [value]=\\\"(createTable$ | async)\\\" (change)=\\\"createTable$.next($event.target.checked)\\\">\\n      <label class=\\\"form-check-label\\\" for=\\\"create-tabel\\\">Create New Table</label>\\n    </div>\\n  </div>\\n  <div class=\\\"row flex-fill mx-0 flex-column my-2 h-100 position-relative\\\">\\n    <div fxLayout=\\\"row\\\">\\n      <h5 fxFlex class=\\\"table-title\\\">Fields Mappings</h5>\\n      <span *ngIf=\\\"rowsLoaded\\\">{{rowsLoaded | number}} rows loaded</span>\\n    </div>\\n    <div class=\\\"fields-container d-flex flex-fill\\\">\\n      <wj-menu #ctxMenu [isButton]=\\\"true\\\" (itemClicked)=\\\"onCtxMenuClicked()\\\" style=\\\"display:none;\\\">\\n        <wj-menu-item [value]=\\\"'edit'\\\">Insert Field above</wj-menu-item>\\n      </wj-menu>\\n      <wj-flex-grid #grid class=\\\"h-100\\\" [itemsSource]=\\\"tableColumns\\\" [allowDelete]=\\\"createTable$ | async\\\"\\n        [allowAddNew]=\\\"createTable$ | async\\\" [wjContextMenu]=\\\"ctxMenu\\\">\\n        <wj-flex-grid-column header=\\\"IsKey\\\" [isReadOnly]=\\\"!(createTable$ | async)\\\" binding=\\\"isKey\\\" [width]=\\\"50\\\"\\n          dataType=\\\"Boolean\\\" [allowSorting]=\\\"false\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Table Field\\\" [isReadOnly]=\\\"!(createTable$ | async)\\\" binding=\\\"fieldName\\\"\\n          dataType=\\\"String\\\" [minWidth]=\\\"50\\\" [width]=\\\"'*'\\\" [allowSorting]=\\\"false\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Source Field\\\" [isReadOnly]=\\\"false\\\" binding=\\\"sourceField\\\" [dataMap]=\\\"sourceFields\\\"\\n          [minWidth]=\\\"50\\\" [width]=\\\"'*'\\\" [allowSorting]=\\\"false\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Field Data Type\\\" [isReadOnly]=\\\"!(createTable$ | async)\\\" [dataMap]=\\\"dataTypes\\\"\\n          binding=\\\"dataType\\\" [allowSorting]=\\\"false\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Size\\\" [isRequired]=\\\"false\\\" [isReadOnly]=\\\"!(createTable$ | async)\\\" binding=\\\"size\\\"\\n          dataType=\\\"Number\\\" [allowSorting]=\\\"false\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Preprocess Function\\\" [isRequired]=\\\"false\\\" [isReadOnly]=\\\"false\\\"\\n          [dataMap]=\\\"preprocessors\\\" binding=\\\"preprocessFunc\\\" [allowSorting]=\\\"false\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Parameters\\\" [isRequired]=\\\"false\\\" [isReadOnly]=\\\"false\\\" binding=\\\"preprocessParams\\\"\\n          [allowSorting]=\\\"false\\\">\\n        </wj-flex-grid-column>\\n      </wj-flex-grid>\\n    </div>\\n    <div\\n      class=\\\"d-flex justify-content-center position-absolute align-items-center w-100 h-100 spinner bg-white flex-column\\\"\\n      *ngIf=\\\"loading\\\">\\n      <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n        <span class=\\\"sr-only\\\">Loading...</span>\\n      </div>\\n      <h5>{{progressMessage}}</h5>\\n    </div>\\n    <div class=\\\"d-flex position-absolute align-items-center w-100 h-100 spinner bg-white flex-column\\\" *ngIf=\\\"error\\\">\\n      <alert type=\\\"danger\\\">\\n        <strong>Error:</strong> Verify file format ({{error}}).\\n      </alert>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"modal-footer flex-column\\\">\\n  <div class=\\\"row w-100 mx-0 px-0\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"!data || !data.length\\\" (click)=\\\"previewData()\\\">Preview\\n      Data</button>\\n    <button type=\\\"button\\\" (click)=\\\"import()\\\" [disabled]=\\\"!isValid\\\" class=\\\"btn btn-primary ml-auto mr-2\\\">Import</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modalRef.hide()\\\">Cancel</button>\\n  </div>\\n</div>\"","module.exports = \"<app-layout [config]=\\\"layoutConfig\\\">\\n  <h2 title class=\\\"mb-0 ml-0 top-sub-header w-md-down-50\\\">WORKSHEET <span>SYSTEMS</span> - Database</h2>\\n  <app-db-connections header class=\\\"ml-auto d-flex mr-2\\\"></app-db-connections>\\n  <app-sql-objects sidebar class=\\\"h-100 w-100 py-2 d-flex flex-column\\\"></app-sql-objects>\\n  <router-outlet content></router-outlet>\\n</app-layout>\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">Preview result table</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body px-4 d-flex flex-column h-100\\\">\\n    <wj-flex-grid #grid class=\\\"h-100\\\"\\n    [itemsSource]=\\\"data\\\"\\n    [allowDelete]=\\\"false\\\"\\n    [allowAddNew]=\\\"false\\\"\\n    [isReadOnly]=\\\"true\\\">\\n    <wj-flex-grid-column *ngFor=\\\"let field of config.fields\\\"\\n      [header]=\\\"field.fieldName\\\"\\n      [binding]=\\\"field.fieldName\\\"\\n      [dataType]=\\\"getColumnType(field.dataType)\\\"\\n      [format]=\\\"'dd/MM/yyyy HH:mm:ss'\\\">\\n      </wj-flex-grid-column>\\n  </wj-flex-grid>\\n</div>\\n<div class=\\\"modal-footer flex-column\\\">\\n  <div class=\\\"row w-100 mx-0 px-0\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n  </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"rows-count position-absolute pr-2\\\">Show max\\n  <select class=\\\"form-control py-0\\\" (change)=\\\"onRowsCountSelect($event)\\\" [value]=\\\"perPage$ | async\\\">\\n    <option>1000</option>\\n    <option>10000</option>\\n    <option>50000</option>\\n    <option value=\\\"\\\">ALL</option>\\n  </select>\\n  rows. &nbsp;&nbsp;&nbsp;&nbsp; Total {{rowsCount$ | async | number}} rows.</div>\\n\"","module.exports = \"<tabset class=\\\"tabset-fx sql-object-tab\\\">\\n  <tab [heading]=\\\"dataObject ? dataObject.objectName : 'Create table'\\\" class=\\\"h-100 position-relative\\\">\\n    <app-rows-count></app-rows-count>\\n    <tabset class=\\\"tabset-fx\\\">\\n      <tab class=\\\"position-relative\\\">\\n        <ng-template tabHeading>\\n          <i class=\\\"fa fa-cogs fa-lg\\\"></i> Structure <span [ngClass]=\\\"{changed: isStructureChanged$ | async }\\\"></span>\\n        </ng-template>\\n        <app-table-editor #editor left class=\\\"w-100 h-100\\\"></app-table-editor>\\n        <div class=\\\"d-flex justify-content-center position-absolute align-items-center w-100 h-100 spinner bg-white flex-column\\\"\\n          *ngIf=\\\"(loading$ | async) as loading\\\">1\\n          <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n            <span class=\\\"sr-only\\\">Loading...</span>\\n          </div>\\n          <h5 *ngFor=\\\"let message of loading.messages\\\">{{message}}</h5>\\n        </div>\\n      </tab>\\n      <tab>\\n        <ng-template tabHeading>\\n          <i class=\\\"fa fa-table fa-lg\\\"></i> Data <span [ngClass]=\\\"{changed: isDataChanged$ | async }\\\"></span>\\n        </ng-template>\\n        <app-table-data #data right class=\\\"h-100 d-flex\\\"></app-table-data>\\n      </tab>\\n    </tabset>\\n  </tab>\\n</tabset>\\n\"","module.exports = \"<div class=\\\"toolbar mb-2\\\">\\n  <div class=\\\"btn-group mr-2\\\" dropdown>\\n    <button id=\\\"button-basic\\\" dropdownToggle type=\\\"button\\\" class=\\\"btn btn-primary dropdown-toggle\\\"\\n      aria-controls=\\\"dropdown-basic\\\">New <span class=\\\"caret\\\"></span>\\n    </button>\\n    <ul id=\\\"dropdown-basic\\\" *dropdownMenu class=\\\"dropdown-menu\\\" role=\\\"menu\\\" aria-labelledby=\\\"button-basic\\\">\\n      <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/database', connectionName, 'sql-query']\\\">SQL Query</a></li>\\n      <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/database', connectionName]\\\">Table</a></li>\\n      <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/database', connectionName, 'view']\\\">View</a></li>\\n      <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\">Stored Procedure</a></li>\\n      <li role=\\\"menuitem\\\"><a class=\\\"dropdown-item\\\">Function</a></li>\\n    </ul>\\n  </div>\\n  <button type=\\\"button\\\" (click)=\\\"refresh()\\\" class=\\\"btn btn-secondary mr-2\\\">\\n    Refresh\\n  </button>\\n  <button type=\\\"button\\\" (click)=\\\"import()\\\" class=\\\"btn btn-secondary\\\">\\n    Import\\n  </button>\\n</div>\\n<app-list-view #listView [comparator]=\\\"areObjectsEqual\\\" class=\\\"d-flex h-100 overflow-auto\\\" [list]=\\\"list$ | async\\\"\\n  group=\\\"objectType\\\" orderBy=\\\"id\\\" (select)=\\\"onSelect($event)\\\">\\n  <ng-template let-item>\\n    <a (click)=\\\"onSelect(item)\\\" *ngIf=\\\"item.objectType === 'Table'\\\"  [routerLink]=\\\"['/database', connectionName, item.objectOwner, item.objectName]\\\" class=\\\"p-1 pl-4 btn-link w-100\\\" title=\\\"{{item.objectOwner}}\\\">\\n      <i class=\\\"fa fa-table\\\"></i>\\n      {{item.objectOwner}}.{{item.objectName}}\\n    </a>\\n    <a (click)=\\\"onSelect(item)\\\" *ngIf=\\\"item.objectType === 'View'\\\"  [routerLink]=\\\"['/database', connectionName, 'view', item.objectOwner, item.objectName]\\\" class=\\\"p-1 pl-4 btn-link w-100\\\" title=\\\"{{item.objectOwner}}\\\">\\n      <i class=\\\"fa fa-cubes\\\"></i>\\n      {{item.objectOwner}}.{{item.objectName}}\\n    </a>\\n  </ng-template>\\n  <ng-template let-item #icon>\\n    <i class=\\\"fa mx-1\\\" [ngClass]=\\\"{'fa-table': item.value === 'Table', 'fa-cubes': item.value === 'View'}\\\"></i>\\n  </ng-template>\\n</app-list-view>\\n\"","module.exports = \"<tabset class=\\\"tabset-fx\\\">\\n    <tab heading=\\\"SQL query\\\" class=\\\"h-100\\\">\\n      <app-split-content class=\\\"h-100\\\">\\n        <ng-container actions>\\n          <button type=\\\"button\\\" (click)=\\\"onRun()\\\" class=\\\"btn btn-primary ml-auto mr-1\\\">Run</button>\\n        </ng-container>\\n        <div #sqlElement left class=\\\"w-100\\\"></div>\\n        <ng-container right>\\n          <alert type=\\\"danger\\\" *ngIf=\\\"error\\\">\\n            <strong>Error:</strong> {{error}}\\n          </alert>\\n          <wj-flex-grid #flex class=\\\"h-100\\\" *ngIf=\\\"fields && data\\\"\\n            [(itemsSource)]=\\\"data\\\"\\n            [isReadOnly]=\\\"true\\\">\\n            <wj-flex-grid-column *ngFor=\\\"let field of fields\\\"\\n              [header]=\\\"field.headerText\\\"\\n              [binding]=\\\"field.bindingName\\\"\\n              [dataType]=\\\"field.dataType\\\">\\n            </wj-flex-grid-column>\\n          </wj-flex-grid>\\n        </ng-container>\\n        <ng-container left-label>\\n          <i class=\\\"fa fa-cogs fa-lg\\\"></i> SQL\\n        </ng-container>\\n        <ng-container right-label>\\n          <i class=\\\"fa fa-table fa-lg\\\"></i> Data\\n        </ng-container>\\n      </app-split-content>\\n    </tab>\\n  </tabset>\\n\"","module.exports = \"<tabset class=\\\"tabset-fx sql-object-tab\\\">\\n    <tab [heading]=\\\"(dataObject$ | async) ? (dataObject$ | async).objectName : 'Create view'\\\" class=\\\"h-100 position-relative\\\">\\n      <app-rows-count></app-rows-count>\\n      <tabset class=\\\"tabset-fx\\\">\\n        <tab class=\\\"position-relative\\\">\\n          <ng-template tabHeading>\\n            <i class=\\\"fa fa-cogs fa-lg\\\"></i> Structure <span [ngClass]=\\\"{changed: isSQLChanged$ | async }\\\"></span>\\n          </ng-template>\\n          <app-view-editor left class=\\\"w-100 h-100\\\"></app-view-editor>\\n          <div class=\\\"d-flex justify-content-center position-absolute align-items-center w-100 h-100 spinner bg-white flex-column\\\"\\n            *ngIf=\\\"(loading$ | async) as loading\\\">1\\n            <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n              <span class=\\\"sr-only\\\">Loading...</span>\\n            </div>\\n            <h5 *ngFor=\\\"let message of loading.messages\\\">{{message}}</h5>\\n          </div>\\n        </tab>\\n        <tab>\\n          <ng-template tabHeading>\\n            <i class=\\\"fa fa-table fa-lg\\\"></i> Data\\n          </ng-template>\\n          <app-table-data [isReadOnly]=\\\"true\\\" #data right class=\\\"h-100 d-flex\\\"></app-table-data>\\n        </tab>\\n      </tabset>\\n    </tab>\\n  </tabset>\\n\"","module.exports = \"<div class=\\\"row mx-0\\\">\\n  <app-filters [fields]=\\\"fields\\\" (changed)=\\\"onFiltersChange($event)\\\"\\n    [currentFilters]=\\\"filters\\\" [dataObject]=\\\"dataObject\\\" [connection]=\\\"connection\\\"></app-filters>\\n  <button *ngIf=\\\"!isReadOnly\\\" type=\\\"button\\\" (click)=\\\"saveData()\\\" [disabled]=\\\"!(isChanged$ | async)\\\"\\n    class=\\\"btn btn-primary ml-auto mr-0 align-self-baseline mb-2\\\">Save</button>\\n  <span dropdown class=\\\"d-flex position-relative px-2 mb-2\\\" [ngClass]=\\\"{'ml-auto': isReadOnly}\\\" placement=\\\"top left\\\">\\n    <button dropdownToggle type=\\\"button\\\" class=\\\"btn py-0\\\">\\n      <i class=\\\"fa fa-ellipsis-v\\\"></i>\\n    </button>\\n    <ul *dropdownMenu class=\\\"dropdown-menu left-menu\\\" role=\\\"menu\\\">\\n      <li role=\\\"menuitem\\\">\\n        <a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"exportToExcel()\\\">Export to Excel</a>\\n      </li>\\n      <li role=\\\"menuitem\\\">\\n        <a class=\\\"dropdown-item cursor-pointer\\\" (click)=\\\"exportToCSV()\\\">Export to CSV</a>\\n      </li>\\n    </ul>\\n  </span>\\n</div>\\n<div class=\\\"position-relative h-100\\\">\\n  <div class=\\\"d-flex justify-content-center position-absolute align-items-center w-100 h-100 spinner bg-white flex-column\\\"\\n    *ngIf=\\\"(loading$ | async) as loading\\\">\\n    <div class=\\\"spinner-border\\\" role=\\\"status\\\">\\n      <span class=\\\"sr-only\\\">Loading...</span>\\n    </div>\\n    <h5 *ngFor=\\\"let message of loading.messages\\\">{{message}}</h5>\\n  </div>\\n  <wj-menu #ctxMenu\\n    [isButton]=\\\"true\\\"\\n    (itemClicked)=\\\"onCtxMenuClicked(ctxMenu)\\\" style=\\\"display:none;\\\">\\n    <wj-menu-item value=\\\"edit-column\\\"><span class=\\\"px-2\\\"><i class=\\\"fa fa-columns mr-1 my-2\\\"></i>Format Column</span></wj-menu-item>\\n    <wj-menu-item value=\\\"fill-all\\\"><span class=\\\"px-2\\\"><i class=\\\"fa fa-file-o mr-1 my-2\\\"></i>Fill all rows</span></wj-menu-item>\\n    <wj-menu-item value=\\\"fill-empty\\\"><span class=\\\"px-2\\\"><i class=\\\"fa fa-files-o mr-1 my-2\\\"></i>Fill empty rows</span></wj-menu-item>\\n  </wj-menu>\\n  <wj-flex-grid #grid class=\\\"data-grid\\\" [wjContextMenu]=\\\"ctxMenu\\\" [(itemsSource)]=\\\"data\\\" [allowAddNew]=\\\"true\\\" [allowDelete]=\\\"true\\\"\\n    (initialized)=\\\"initializedGrid(grid)\\\" [isReadOnly]=\\\"!!isReadOnly\\\">\\n    <wj-flex-grid-column *ngFor=\\\"let field of fields\\\" [header]=\\\"field.headerText\\\" [binding]=\\\"field.bindingName\\\"\\n      [dataType]=\\\"field.dataType\\\" [width]=\\\"field.width\\\" [format]=\\\"field.displayFormat\\\">\\n      <ng-template wjFlexGridCellTemplate [cellType]=\\\"'ColumnHeader'\\\" let-cell=\\\"cell\\\">\\n        <div class=\\\"text-normal\\\" [title]=\\\"field.headerText\\\">{{field.headerText}}</div>\\n        <app-filter (apply)=\\\"onApply($event, field)\\\" [field]=\\\"field\\\" [icon]=\\\"true\\\" [dataObject]=\\\"dataObject\\\" [connection]=\\\"connection\\\" [currentFilters]=\\\"filters\\\"></app-filter>\\n      </ng-template>\\n    </wj-flex-grid-column>\\n  </wj-flex-grid>\\n  <div class=\\\"row m-0 align-items-center\\\">\\n    <i class=\\\"fa fa-filter cursor-pointer px-1\\\" *ngIf=\\\"filters\\\" triggers=\\\"mouseenter:mouseleave\\\" [popover]=\\\"popTemplate\\\"></i>\\n    <span class=\\\"ml-auto mr-1\\\">Rows: {{data ? data.length : 0 | number}}</span>\\n    <ng-container *ngIf=\\\"limitRows\\\">\\n      |<i class=\\\"fa fa-angle-double-left ml-1 cursor-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"onNextPage(-1)\\\"></i>\\n      Page: {{currentPage}}<i class=\\\"fa fa-angle-double-right cursor-pointer\\\" (click)=\\\"onNextPage(1)\\\" aria-hidden=\\\"true\\\"></i>\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<ng-template #popTemplate>\\n  <h6>Apply Filter</h6>\\n  <ul class=\\\"applied-filters-list px-0\\\" *ngIf=\\\"filters\\\">\\n    <li *ngFor=\\\"let f of filtersList\\\">\\n      <b>{{f.fieldName}}</b>: {{f.value}}\\n    </li>\\n  </ul>\\n</ng-template>\\n\"","module.exports = \"<form class=\\\"d-flex flex-column h-100\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" *ngIf=\\\"dataObject\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"stretch center\\\">\\n    <h5 fxFlex class=\\\"col-sm-12 px-0\\\">Table Information</h5>\\n    <div class=\\\"row mx-0\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"!(isChanged$ | async)\\\" class=\\\"btn btn-primary ml-auto mr-1\\\">Save</button>\\n      <button type=\\\"button\\\" *ngIf=\\\"dataObject\\\" (click)=\\\"onTableDelete()\\\" class=\\\"btn btn-secondary\\\">Delete</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row mx-0\\\" style=\\\"max-width: 750px\\\">\\n    <div class=\\\"form-group col-sm-3 px-0 mb-2\\\">\\n      <label for=\\\"objectOwner\\\">Owner</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"objectOwner\\\" #objectOwner=\\\"ngModel\\\" (input)=\\\"onUpdate()\\\" required\\n        [(ngModel)]=\\\"dataObject.objectOwner\\\" name=\\\"objectOwner\\\">\\n      <div *ngIf=\\\"objectOwner.invalid && (objectOwner.dirty || objectOwner.touched)\\\"\\n        class=\\\"alert alert-danger py-1 px-2 m-0 w-100\\\">\\n        <div *ngIf=\\\"objectOwner.errors.required\\\">Owner Name is required.</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group col-sm-9 pr-0 pl-2 mb-2\\\">\\n      <label for=\\\"name\\\">Table Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" #objectName=\\\"ngModel\\\" id=\\\"objectName\\\" (input)=\\\"onUpdate()\\\" required\\n        [(ngModel)]=\\\"dataObject.objectName\\\" name=\\\"objectName\\\">\\n      <div *ngIf=\\\"objectName.invalid && (objectName.dirty || objectName.touched)\\\"\\n        class=\\\"alert alert-danger py-1 px-2 m-0 w-100\\\">\\n        <div *ngIf=\\\"objectName.errors.required\\\">Table Name is required.</div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row flex-fill mx-0 flex-column h-100\\\" style=\\\"max-width: 750px\\\">\\n    <h5 class=\\\"col-sm-12 table-title px-0\\\">Define Table Fields</h5>\\n    <div class=\\\"col fields-container d-flex h-100 px-0 mb-2\\\">\\n      <wj-flex-grid #grid class=\\\"h-100\\\" [itemsSource]=\\\"collection\\\" [allowDelete]=\\\"true\\\" [allowAddNew]=\\\"true\\\"\\n        (initialized)=\\\"initializedGrid(grid)\\\" (deletedRow)=\\\"onFieldsUpdate()\\\" [itemFormatter]=\\\"formatItem\\\">\\n        <wj-flex-grid-column header=\\\"IsKey\\\" binding=\\\"isKey\\\" [width]=\\\"50\\\" dataType=\\\"Boolean\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Field Name\\\" binding=\\\"fieldName\\\" [minWidth]=\\\"50\\\" [width]=\\\"'*'\\\">\\n        </wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Field Data Type\\\" [dataMap]=\\\"dataTypes\\\" binding=\\\"dataType\\\"></wj-flex-grid-column>\\n        <wj-flex-grid-column header=\\\"Size\\\" binding=\\\"size\\\" dataType=\\\"Number\\\" [width]=\\\"70\\\"></wj-flex-grid-column>\\n      </wj-flex-grid>\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \"<form class=\\\"d-flex flex-column h-100\\\" #form=\\\"ngForm\\\" *ngIf=\\\"dataObject\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"stretch center\\\">\\n    <h5 fxFlex class=\\\"col-sm-12 px-0\\\">View Information</h5>\\n    <div class=\\\"row mx-0\\\">\\n      <button type=\\\"submit\\\" [disabled]=\\\"!isChanged\\\" (click)=\\\"onSubmit()\\\" class=\\\"btn btn-primary ml-auto mr-1\\\">Save</button>\\n      <button type=\\\"button\\\" *ngIf=\\\"dataObject\\\" (click)=\\\"onViewDelete()\\\" class=\\\"btn btn-secondary\\\">Delete</button>\\n    </div>\\n  </div>\\n  <div class=\\\"row mx-0\\\" style=\\\"max-width: 750px\\\">\\n    <div class=\\\"form-group col-sm-3 px-0 mb-2\\\">\\n      <label for=\\\"objectOwner\\\">Owner</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"disabled\\\" id=\\\"objectOwner\\\" #objectOwner=\\\"ngModel\\\" required\\n        [ngModel]=\\\"dataObject.objectOwner\\\" name=\\\"objectOwner\\\">\\n    </div>\\n    <div class=\\\"form-group col-sm-9 pr-0 pl-2 mb-2\\\" *ngIf=\\\"dataObject.objectName !== 'New'\\\">\\n      <label for=\\\"name\\\">View Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"disabled\\\" #objectName=\\\"ngModel\\\" id=\\\"objectName\\\" required\\n        [ngModel]=\\\"dataObject.objectName\\\" name=\\\"objectName\\\">\\n    </div>\\n  </div>\\n  <app-split-content class=\\\"h-100\\\">\\n    <div #sqlEditor left class=\\\"h-100 p-2 w-100\\\"></div>\\n    <ng-container #fields right class=\\\"w-100\\\">\\n      <div class=\\\"col fields-container d-flex h-100 px-0 mb-2\\\">\\n        <wj-flex-grid #grid class=\\\"h-100\\\" [isReadOnly]=\\\"true\\\" [itemsSource]=\\\"collection\\\" [allowDelete]=\\\"false\\\" [allowAddNew]=\\\"false\\\">\\n          <wj-flex-grid-column header=\\\"IsKey\\\" binding=\\\"isKey\\\" [width]=\\\"50\\\" dataType=\\\"Boolean\\\"></wj-flex-grid-column>\\n          <wj-flex-grid-column header=\\\"Field Name\\\" binding=\\\"fieldName\\\" [minWidth]=\\\"50\\\" [width]=\\\"'*'\\\">\\n          </wj-flex-grid-column>\\n          <wj-flex-grid-column header=\\\"Field Data Type\\\" [dataMap]=\\\"dataTypes\\\" binding=\\\"dataType\\\"></wj-flex-grid-column>\\n          <wj-flex-grid-column header=\\\"Size\\\" binding=\\\"size\\\" dataType=\\\"Number\\\" [width]=\\\"70\\\"></wj-flex-grid-column>\\n        </wj-flex-grid>\\n      </div>\\n    </ng-container>\\n    <ng-container left-label>\\n      <i class=\\\"fa fa-cogs fa-lg\\\"></i> SQL editor\\n    </ng-container>\\n    <ng-container right-label>\\n      <i class=\\\"fa fa-table fa-lg\\\"></i> Fields\\n    </ng-container>\\n  </app-split-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlLW1hbmFnZXIvY29tcG9uZW50cy9kYi1jb25uZWN0aW9ucy9kYi1jb25uZWN0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { DBManagerState } from '../../store';\nimport { selectConnectionsList, selectRouterParam } from '../../store/selectors';\nimport { Observable } from 'rxjs';\nimport { DBConnection } from 'src/app/shared/models';\n\n/**\n * @description Compoenents displays list of selectable connection.\n */\n@Component({\n  selector: 'app-db-connections',\n  templateUrl: './db-connections.component.html',\n  styleUrls: ['./db-connections.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DbConnectionsComponent implements OnInit {\n\n  connections$: Observable<DBConnection[]>;\n  selectedConnection$: Observable<string>;\n\n  constructor(private router: Router, private store: Store<DBManagerState>) { }\n\n  ngOnInit() {\n    this.connections$ = this.store.select(selectConnectionsList);\n    this.selectedConnection$ = this.store.select(selectRouterParam, 'connectionName');\n  }\n\n  onConnectionSelect(connection: string) {\n    this.router.navigate(['/database', connection]);\n  }\n\n}\n","module.exports = \":host {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n\\n.fields-container {\\n  height: calc(100% - 200px);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZrdWt1cmJhL0RldmVsb3BtZW50L1Byb2plY3RzL3Vwd29yay93b3Jrc2hlZXRzMi1hcHAvc3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvaW1wb3J0LWNzdi9pbXBvcnQtY3N2LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvaW1wb3J0LWNzdi9pbXBvcnQtY3N2LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usb0JBQUE7RUFBQSxhQUFBO0VBQ0EsNEJBQUE7RUFBQSw2QkFBQTtVQUFBLHNCQUFBO0FDQ0Y7O0FERUE7RUFDRSwwQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZGF0YWJhc2UtbWFuYWdlci9jb21wb25lbnRzL2ltcG9ydC1jc3YvaW1wb3J0LWNzdi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmZpZWxkcy1jb250YWluZXIge1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDIwMHB4KTtcbn1cbiIsIjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmZpZWxkcy1jb250YWluZXIge1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDIwMHB4KTtcbn0iXX0= */\"","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { FileManagerService, SqlDbService, NotificationService, DialogService } from 'src/app/shared/services';\nimport { MetaDataObject, SQLDataTypes, NotificationType, SqlObject, SqlTypesSizes, SqlSaveStatus } from 'src/app/shared/models';\nimport { AuthService } from 'src/app/security';\nimport { getFormattedFields, getPrimaryKeys, filterItems, formatToValidSqlName } from '../../utils';\nimport { DBManagerState } from '../../store';\nimport { Store } from '@ngrx/store';\nimport { selectConnectionName, selectSqlObjectsList } from '../../store/selectors';\nimport { environment } from 'src/environments/environment.extension';\nimport { switchMap, catchError, map, tap } from 'rxjs/operators';\nimport { throwError, Observable, of, BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { FlexGrid, CellRangeEventArgs, CellType } from 'wijmo/wijmo.grid';\nimport { MapTableColumn, Preprocessors } from '../../models';\nimport { LoadSqlObjectsAction } from '../../store/actions/sql-objects';\nimport { getErrorMessage, dateToDtoString, parseDatetimeOrNull, parseNumberOrNull } from 'src/app/shared';\nimport { PreviewDataComponent } from '../preview-data/preview-data.component';\nimport Proprocessor, { ProcessFuncToType } from '../../preprocessor';\n\nenum ProgressMessage {\n  Create = 'Creating new table',\n  Importing = 'Importing data',\n  Imported = 'Data successfully imported'\n}\n\n@Component({\n  selector: 'app-import-csv',\n  templateUrl: './import-csv.component.html',\n  styleUrls: ['./import-csv.component.scss']\n})\nexport class ImportCsvComponent implements OnInit {\n\n  @Input() modalRef: ModalDirective;\n  @ViewChild('grid', { static: true }) grid: FlexGrid;\n  readonly dataTypes = Object.values(SQLDataTypes);\n  tableColumns: MapTableColumn[];\n  metaData: MetaDataObject;\n  data: any;\n  rowsLoaded: number;\n  sourceFields: any[];\n  tables$: Observable<SqlObject[]>;\n  createTable$ = new BehaviorSubject(true);\n  selectedTable: MetaDataObject;\n  loading = false;\n  progressMessage: string;\n  error: string;\n  preprocessors = Preprocessors;\n  private connection: string;\n  private typesDescriptor: {};\n  private rowIndex: number;\n\n  constructor(\n    private fileService: FileManagerService,\n    private authService: AuthService,\n    private sqlService: SqlDbService,\n    private store: Store<DBManagerState>,\n    private notificationService: NotificationService,\n    private router: Router,\n    private dialogService: DialogService) { }\n\n  ngOnInit() {\n    this.metaData = {\n      objectId: 0,\n      objectName: null,\n      objectOwner: this.authService.user.userName,\n      objectType: 'Table',\n      fields: []\n    };\n\n    this.store.select(selectConnectionName).subscribe(connection => {\n      this.connection = connection;\n    });\n\n    this.tables$ = this.store.select(selectSqlObjectsList);\n\n    this.createTable$.subscribe((val) => {\n      if (val) {\n        this.createNewTableColumns();\n      } else {\n        this.createSelectedTableColumns();\n      }\n    });\n\n    this.grid.addEventListener(this.grid.hostElement, 'contextmenu', (e: CellRangeEventArgs) => {\n      const ht = this.grid.hitTest(e);\n      this.rowIndex = ht.row;\n    });\n\n    this.grid.cellEditEnded.addHandler((g, e: CellRangeEventArgs) => {\n      const dataItem = this.grid.rows[e.row].dataItem;\n      const binding = this.grid.columns[e.col].binding;\n      const newVal = dataItem[binding];\n\n      if (e.panel.cellType === CellType.Cell) {\n\n        switch (binding) {\n          case 'dataType': {\n            dataItem.size = SqlTypesSizes[newVal] || null; break;\n          }\n          case 'preprocessFunc': {\n            dataItem.dataType = ProcessFuncToType[newVal] || null;\n            if (dataItem.dataType) {\n              dataItem.size = SqlTypesSizes[dataItem.dataType] || null;\n            }\n            break;\n          }\n        }\n        this.grid.refreshCells(false);\n      }\n    });\n  }\n\n  get isValid() {\n    return this.metaData.objectOwner && this.metaData.objectName && this.metaData.fields.length;\n  }\n\n  onCtxMenuClicked() {\n    this.grid.collectionView.sourceCollection =\n      [...this.grid.collectionView.items.slice(0, this.rowIndex),\n      { isKey: false, dataType: SQLDataTypes.NVARCHAR, size: SqlTypesSizes[SQLDataTypes.NVARCHAR] },\n      ...this.grid.collectionView.items.slice(this.rowIndex)];\n  }\n\n  onTableSelect(table: SqlObject) {\n    this.loading = true;\n    this.sqlService.getObject(this.sqlConnectionUrl, table.objectOwner, table.objectName).subscribe((metaData) => {\n      this.selectedTable = metaData;\n      this.createSelectedTableColumns();\n      this.loading = false;\n    });\n  }\n\n  import() {\n    const createTable = this.createTable$.value;\n    this.loading = true;\n    this.progressMessage = createTable ? ProgressMessage.Create : ProgressMessage.Importing;\n    const tableColumns = this.grid.collectionView.items;\n    const metaData = {\n      ...(createTable ? this.metaData : this.selectedTable),\n      fields: getFormattedFields(tableColumns),\n      primaryKeys: getPrimaryKeys(tableColumns)\n    };\n    (createTable ? this.sqlService.generateObject(this.sqlConnectionUrl, metaData) : of(null)).pipe(\n      catchError(e => {\n        const message = getErrorMessage(e) || 'Failed to create new table';\n        this.notificationService.open({\n          message,\n          type: NotificationType.DANGER\n        });\n        return throwError(message);\n      }),\n      switchMap(() => this.saveData())).subscribe(\n        (res) => this.importHandler(metaData, res),\n        (e) => this.importErrorHandler(e));\n  }\n\n  previewData() {\n    const previewDialog = this.dialogService.open(PreviewDataComponent, { class: 'modal-w-90 full-height d-flex flex-column' });\n    previewDialog.config = {\n      data: Proprocessor.run(this.data, this.grid.collectionView.items),\n      fields: this.grid.collectionView.items\n    };\n  }\n\n  get sqlConnectionUrl() {\n    return `${environment.apiBaseUrl}/sql/${this.connection}`;\n  }\n\n  loadCSV() {\n    this.fileService.importCSVFile().subscribe((response) => {\n      this.error = null;\n      if (!response.result) {\n        this.loading = true;\n        return;\n      }\n      const { result: { data }, file } = response;\n      if (!this.metaData.objectName) {\n        this.metaData.objectName = formatToValidSqlName(file.name.replace(/.txt|-|.csv$/g, ''));\n      }\n      this.data = data.filter(r => r.join('') !== '');\n      this.rowsLoaded = this.data.length;\n      try {\n        this.typesDescriptor = this.getTypes(this.data);\n        this.sourceFields = this.data[0].map(sf => formatToValidSqlName(sf));\n        this.metaData.fields = getFormattedFields(this.sourceFields);\n        if (this.createTable$.value) {\n          this.createNewTableColumns();\n        } else {\n          this.createSelectedTableColumns();\n        }\n      } catch (e) {\n        this.data = null;\n        this.sourceFields = null;\n        this.metaData.fields = null;\n        this.error = e.message;\n      } finally {\n        this.loading = false;\n      }\n    });\n  }\n\n  getSelectedTableTitle() {\n    return this.selectedTable ? `${this.selectedTable.objectOwner}.${this.selectedTable.objectName}` : 'Select table';\n  }\n\n  private importHandler(metaData, res: SqlSaveStatus) {\n    if (res.savedItemsCount === res.itemsToSaveCount) {\n      this.notificationService.open({\n        type: NotificationType.SUCCESS,\n        message: `Successfully inserted: ${res.inserted.toLocaleString()}\n        , updated: ${res.updated.toLocaleString()}\n        , deleted: ${res.deleted.toLocaleString()}`\n      });\n      this.progressMessage = ProgressMessage.Imported;\n\n      if (this.createTable$.value) {\n        this.store.dispatch(new LoadSqlObjectsAction(this.connection));\n      }\n\n      setTimeout(() => {\n        this.router.navigate(['/database', this.connection, metaData.objectOwner, metaData.objectName]);\n        this.modalRef.hide();\n        this.loading = false;\n        this.progressMessage = null;\n      }, 1e3);\n    } else {\n      let mess = res.savedItemsCount ? 'So far ' : '';\n      if (res.inserted) {\n        mess += `Inserted: ${res.inserted.toLocaleString()} `;\n      }\n      if (res.updated) {\n        mess += `Updated: ${res.updated.toLocaleString()} `;\n      }\n      if (res.deleted) {\n        mess += `Deleted: ${res.deleted.toLocaleString()}`;\n      }\n      this.progressMessage = `${ProgressMessage.Importing} ${res.itemsToSaveCount.toLocaleString()} rows. ${mess}`;\n    }\n  }\n\n  private importErrorHandler(e) {\n    this.loading = false;\n    this.progressMessage = null;\n    console.error(e);\n  }\n\n  private createSelectedTableColumns() {\n    if (this.selectedTable) {\n      const primaryKeys = new Set(this.selectedTable.primaryKeys.map(p => p.fieldName));\n      this.tableColumns = filterItems(this.selectedTable.fields).map((f, i) => {\n        const sourceField = this.sourceFields ? this.sourceFields.find(sf => sf === f.fieldName) : null;\n        return {\n          fieldName: f.fieldName,\n          dataType: f.dataType || SQLDataTypes.NVARCHAR,\n          size: f.size,\n          sourceField,\n          isKey: primaryKeys.has(f.fieldName),\n          preprocessFunc: null,\n          preprocessParams: null\n        };\n      });\n    } else {\n      this.tableColumns = [];\n    }\n  }\n\n  private createNewTableColumns() {\n    if (this.sourceFields) {\n      this.tableColumns = filterItems(this.sourceFields).map((f, i) => {\n        const typeDesc = this.typesDescriptor[`col${i}`];\n        return {\n          fieldName: f.fieldName,\n          dataType: f.dataType || typeDesc.type || SQLDataTypes.NVARCHAR,\n          size: f.size || typeDesc.size,\n          sourceField: f.fieldName,\n          isKey: f.isKey || Boolean(typeDesc.uniqueValues),\n          preprocessFunc: null,\n          preprocessParams: null\n        };\n      });\n    }\n  }\n\n  // what type does it return?\n  private saveData() {\n    this.progressMessage = ProgressMessage.Importing;\n    const dataObject = this.createTable$.value ? this.metaData : this.selectedTable;\n    return this.sqlService.saveSqlObjectDataWithStatus(this.sqlConnectionUrl, dataObject, this.sendData).pipe(\n      catchError(e => {\n        const message = typeof e.error === 'string' ? e.error : 'Failed to Import';\n        this.notificationService.open({\n          message,\n          type: NotificationType.DANGER\n        });\n        return throwError(message);\n      }));\n  }\n\n  // what type does it return?\n  private get sendData() {\n    const items = this.grid.collectionView.items;\n    const fields = items.map(({ fieldName }) => fieldName);\n    const indexs = fields.map((f, i) => f ? i : -1).filter(i => i !== -1);\n\n    return {\n      tableData: {\n        fieldNames: fields.filter(f => f),\n        rows: Proprocessor.run(this.data, items)\n          .map(arr => arr.filter((v, i) => indexs.includes(i)))\n          .map(rr => rr.map(v => v instanceof Date ? dateToDtoString(v) : v))\n      }\n    };\n  }\n\n  // what type does it return?\n  private getTypes(data) {\n    const typesDescriptor = data[0].reduce((prev: object, fieldName: string, index: number) => {\n      prev[`col${index}`] = {\n        fieldName,\n        index,\n        type: null,\n        size: null,\n        uniqueValues: new Set()\n      };\n      return prev;\n    }, {});\n    for (let index = 1; index < data.length; index++) {\n      const item = data[index];\n      item.forEach((val, i) => {\n        typesDescriptor[`col${i}`] = this.getType(typesDescriptor[`col${i}`], val);\n      });\n    }\n    let isUniqueSet = false;\n    Object.values(typesDescriptor).forEach((v: any) => {\n      v.uniqueValues = v.uniqueValues && !isUniqueSet;\n      if (v.uniqueValues) {\n        isUniqueSet = true;\n      }\n    });\n    return typesDescriptor;\n  }\n\n  private getType(typeInfo, val) {\n    if (typeInfo.uniqueValues && typeInfo.uniqueValues.has(val)) {\n      typeInfo.uniqueValues = false;\n    } else if (typeInfo.uniqueValues) {\n      typeInfo.uniqueValues.add(val);\n    }\n    // ignore empty values\n    if (!val || !String(val).length) { return typeInfo; }\n\n    const intOrBigIntFn = (intNum: number): SQLDataTypes.INT | SQLDataTypes.BIGINT => {\n      return (intNum > 2147483647) ? SQLDataTypes.BIGINT : SQLDataTypes.INT;\n    };\n\n    const numFn = (nn: number) => {\n      if (typeInfo.type === null || typeInfo.type === SQLDataTypes.INT) {\n        typeInfo.type = Number.isInteger(nn) ? intOrBigIntFn(nn) : SQLDataTypes.FLOAT;\n      } else if ((typeInfo.type === null || typeInfo.type === SQLDataTypes.BIGINT)\n        && Number.isInteger(nn)) {\n        typeInfo.type = SQLDataTypes.BIGINT;\n      } else if (typeInfo.type === null || typeInfo.type === SQLDataTypes.FLOAT) {\n        typeInfo.type = SQLDataTypes.FLOAT;\n      }\n      return typeInfo;\n    };\n\n    switch (typeof val) {\n      case 'number': {\n        return numFn(val);\n      }\n      case 'string': {\n        if ((typeInfo.type === null || typeInfo.type === SQLDataTypes.DATE) && parseDatetimeOrNull(val)) {\n          typeInfo.type = SQLDataTypes.DATE;\n          return typeInfo;\n        }\n\n        // try to parse more advanced numbers\n        if (typeInfo.type === null || typeInfo.type === SQLDataTypes.FLOAT\n          || typeInfo.type === SQLDataTypes.INT\n          || typeInfo.type === SQLDataTypes.BIGINT) {\n          const num = parseNumberOrNull(val);\n          if (num !== null) {\n            return numFn(num);\n          }\n        }\n\n        typeInfo.type = SQLDataTypes.NVARCHAR;\n        const size = Math.ceil(val.length / 100) * 100 || 100;\n        if (typeInfo.size === null || typeInfo.size < size) {\n          typeInfo.size = size;\n        }\n        return typeInfo;\n      }\n    }\n    return typeInfo;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlLW1hbmFnZXIvY29tcG9uZW50cy9tYW5hZ2VyLWxheW91dC9tYW5hZ2VyLWxheW91dC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { takeUntil, distinctUntilChanged, switchMap, map, filter } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { LayoutConfig } from 'src/app/shared/models';\nimport { DBManagerState } from '../../store';\nimport { selectRouterParams, selectRouterParam, selectUrl } from '../../store/selectors';\nimport { LoadSqlObjectStructureAction, LoadSqlObjectDataAction,\n  LoadedSqlObjectDataAction, LoadedSqlObjectStructureAction } from '../../store/actions/sql-object';\nimport { SelectConnection } from '../../store/actions/sql-objects';\nimport { getObjectTypeFromUrl } from '../../utils';\n\n/**\n * @description Layout for database manager page.\n */\n@Component({\n  selector: 'app-manager-layout',\n  templateUrl: './manager-layout.component.html',\n  styleUrls: ['./manager-layout.component.scss']\n})\nexport class ManagerLayoutComponent implements OnInit, OnDestroy {\n\n  layoutConfig: LayoutConfig = {\n    icon: 'assets/img/rc-logo-64x64.png',\n    smIcon: 'assets/img/rc-logo-36x36.png',\n    appName: 'database-manager'\n  };\n  private destroy$ = new Subject();\n\n  constructor(private store: Store<DBManagerState>) { }\n\n  ngOnInit() {\n    this.store.select(selectRouterParam, 'connectionName').pipe(\n      filter(connection => Boolean(connection)),\n      distinctUntilChanged(),\n      takeUntil(this.destroy$)).subscribe(connection => {\n      this.store.dispatch(new SelectConnection(connection));\n    });\n\n    this.store.select(selectUrl).pipe(\n      takeUntil(this.destroy$),\n      switchMap(url => {\n        return this.store.select(selectRouterParams, ['ownerName', 'objectName']).pipe(\n          distinctUntilChanged((x, y) => JSON.stringify(x) === JSON.stringify(y)),\n          takeUntil(this.destroy$),\n          map(params => ({params, url})));\n      })).subscribe(({params, url}) => {\n        const {ownerName, objectName} = params;\n        if (ownerName && objectName) {\n          this.store.dispatch(new LoadSqlObjectStructureAction({\n            objectOwner: ownerName,\n            objectName,\n            objectType: getObjectTypeFromUrl(url)\n          }));\n\n          this.store.dispatch(new LoadSqlObjectDataAction({\n            objectOwner: ownerName,\n            objectName\n          }));\n        } else {\n          this.store.dispatch(new LoadedSqlObjectDataAction(null));\n          this.store.dispatch(new LoadedSqlObjectStructureAction(null));\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","module.exports = \":host {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZrdWt1cmJhL0RldmVsb3BtZW50L1Byb2plY3RzL3Vwd29yay93b3Jrc2hlZXRzMi1hcHAvc3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvcHJldmlldy1kYXRhL3ByZXZpZXctZGF0YS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZGF0YWJhc2UtbWFuYWdlci9jb21wb25lbnRzL3ByZXZpZXctZGF0YS9wcmV2aWV3LWRhdGEuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvQkFBQTtFQUFBLGFBQUE7RUFDQSw0QkFBQTtFQUFBLDZCQUFBO1VBQUEsc0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlLW1hbmFnZXIvY29tcG9uZW50cy9wcmV2aWV3LWRhdGEvcHJldmlldy1kYXRhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuIiwiOmhvc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufSJdfQ== */\"","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { SQLDataTypes, SqlTypesToWijmoMap } from 'src/app/shared/models';\nimport { mapTableToValues } from 'src/app/shared';\n\n@Component({\n  selector: 'app-preview-data',\n  templateUrl: './preview-data.component.html',\n  styleUrls: ['./preview-data.component.scss']\n})\nexport class PreviewDataComponent implements OnInit {\n\n  @Input() modalRef: ModalDirective;\n  @Input() config: {fields: any, data: any};\n  data: any;\n\n  ngOnInit() {\n    this.data = mapTableToValues({\n      rows: this.config.data,\n      fieldNames: this.config.fields.map(({fieldName}) => fieldName)\n    });\n  }\n\n  getColumnType(type: SQLDataTypes) {\n    return SqlTypesToWijmoMap[type];\n  }\n}\n","module.exports = \".rows-count {\\n  right: 0;\\n  display: inline-block;\\n  width: auto;\\n  z-index: 11;\\n}\\n.rows-count select {\\n  display: inline-block;\\n  width: auto;\\n  height: 1.5rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZrdWt1cmJhL0RldmVsb3BtZW50L1Byb2plY3RzL3Vwd29yay93b3Jrc2hlZXRzMi1hcHAvc3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvcm93cy1jb3VudC9yb3dzLWNvdW50LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvcm93cy1jb3VudC9yb3dzLWNvdW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsUUFBQTtFQUNBLHFCQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7QUNDRjtBRENFO0VBQ0UscUJBQUE7RUFDQSxXQUFBO0VBQ0EsY0FBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvZGF0YWJhc2UtbWFuYWdlci9jb21wb25lbnRzL3Jvd3MtY291bnQvcm93cy1jb3VudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3dzLWNvdW50IHtcbiAgcmlnaHQ6IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IGF1dG87XG4gIHotaW5kZXg6IDExO1xuXG4gIHNlbGVjdCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIGhlaWdodDogMS41cmVtO1xuICB9XG59XG4iLCIucm93cy1jb3VudCB7XG4gIHJpZ2h0OiAwO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiBhdXRvO1xuICB6LWluZGV4OiAxMTtcbn1cbi5yb3dzLWNvdW50IHNlbGVjdCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IGF1dG87XG4gIGhlaWdodDogMS41cmVtO1xufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil, withLatestFrom, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { DBManagerState } from '../../store';\nimport { selectSqlObjectStructure, selectSqlObjectRowsCount, selectSqlObjectLimitRows } from '../../store/selectors';\nimport { SqlDbService } from 'src/app/shared/services';\nimport { SetSqlDataRowsCountAction, SetSqlDataFilterPropAction } from '../../store/actions/sql-object';\n@Component({\n  selector: 'app-rows-count',\n  templateUrl: './rows-count.component.html',\n  styleUrls: ['./rows-count.component.scss']\n})\nexport class RowsCountComponent implements OnInit, OnDestroy {\n\n  rowsCount$: Observable<number>;\n  perPage$: Observable<number|string>;\n  private destroy$ = new Subject();\n\n  constructor(private store: Store<DBManagerState>, private dbService: SqlDbService) { }\n\n  ngOnInit() {\n    this.rowsCount$ = this.store.select(selectSqlObjectRowsCount);\n    this.perPage$ = this.store.select(selectSqlObjectLimitRows);\n    this.store.select(selectSqlObjectStructure).pipe(\n      takeUntil(this.destroy$),\n      filter(obj => Boolean(obj.objectOwner)),\n      distinctUntilChanged((a, b) => a.objectOwner === b.objectOwner && b.objectName === a.objectName),\n      withLatestFrom(this.store),\n      switchMap(([obj, {dbConnections: {current}}]) => {\n        return this.dbService.selectSqlObjectData(current, obj.objectOwner,  obj.objectName, {fields: ['count|1']});\n      })).subscribe(res => {\n        this.store.dispatch(new SetSqlDataRowsCountAction(res.rows[0][0] as any));\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onRowsCountSelect(evt: any) {\n    this.store.dispatch(new SetSqlDataFilterPropAction({limitRowsCount: evt.target.value}));\n  }\n\n}\n","module.exports = \"tabset.sql-object-tab > .tab-content {\\n  position: relative;\\n}\\n\\n.spinner {\\n  left: 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZrdWt1cmJhL0RldmVsb3BtZW50L1Byb2plY3RzL3Vwd29yay93b3Jrc2hlZXRzMi1hcHAvc3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvc3FsLW9iamVjdC1jb250ZW50L3NxbC1vYmplY3QtY29udGVudC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvZGF0YWJhc2UtbWFuYWdlci9jb21wb25lbnRzL3NxbC1vYmplY3QtY29udGVudC9zcWwtb2JqZWN0LWNvbnRlbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsT0FBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvZGF0YWJhc2UtbWFuYWdlci9jb21wb25lbnRzL3NxbC1vYmplY3QtY29udGVudC9zcWwtb2JqZWN0LWNvbnRlbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJzZXQuc3FsLW9iamVjdC10YWIgPiAudGFiLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5zcGlubmVyIHtcbiAgbGVmdDogMDtcbn1cbiIsInRhYnNldC5zcWwtb2JqZWN0LXRhYiA+IC50YWItY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLnNwaW5uZXIge1xuICBsZWZ0OiAwO1xufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { DBManagerState } from '../../store';\nimport { selectIsChangedSqlObjectStructure, selectIsChangedSqlObjectData, selectSqlObjectStructure,\n  selectSqlObjectLoadingMessages } from '../../store/selectors';\nimport { MetaDataObject } from 'src/app/shared/models';\n\n@Component({\n  selector: 'app-sql-object-content',\n  templateUrl: './sql-object-content.component.html',\n  styleUrls: ['./sql-object-content.component.scss']\n})\nexport class SqlObjectContentComponent implements OnInit, OnDestroy {\n\n  loading$: Observable<any>;\n  destroy$ = new Subject();\n  isStructureChanged$: Observable<boolean>;\n  isDataChanged$: Observable<boolean>;\n  dataObject: MetaDataObject;\n\n  constructor(private store: Store<DBManagerState>) { }\n\n  ngOnInit() {\n    this.isStructureChanged$ = this.store.select(selectIsChangedSqlObjectStructure);\n    this.isDataChanged$ = this.store.select(selectIsChangedSqlObjectData);\n\n    this.store.select(selectSqlObjectStructure).pipe(\n      takeUntil(this.destroy$)).subscribe(obj => {\n        this.dataObject = obj as MetaDataObject;\n      });\n\n    this.loading$ = this.store.select(selectSqlObjectLoadingMessages);\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlLW1hbmFnZXIvY29tcG9uZW50cy9zcWwtb2JqZWN0cy9zcWwtb2JqZWN0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport { DBManagerState } from '../../store';\nimport { LoadSqlObjectsAction } from '../../store/actions/sql-objects';\nimport { selectSqlObjectsList, selectRouterParam, selectSqlObjectStructure } from '../../store/selectors';\nimport { Observable, Subject } from 'rxjs';\nimport { SqlObject } from 'src/app/shared/models';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { ListViewComponent } from 'src/app/shared';\nimport { RefreshSqlObject, SetLoadStateForSqlObject } from '../../store/actions/sql-object';\nimport { DialogService } from 'src/app/shared/services';\nimport { ImportCsvComponent } from '../import-csv/import-csv.component';\n\n/**\n * @description Component represents list of sql objects.\n */\n@Component({\n  selector: 'app-sql-objects',\n  templateUrl: './sql-objects.component.html',\n  styleUrls: ['./sql-objects.component.scss']\n})\nexport class SqlObjectsComponent implements OnInit, OnDestroy {\n\n  @ViewChild('listView', {static: true}) listView: ListViewComponent;\n  list$: Observable<SqlObject[]>;\n  private destroy$ = new Subject();\n  connectionName: string;\n\n  constructor(\n    private store: Store<DBManagerState>,\n    private dialogService: DialogService) { }\n\n  ngOnInit() {\n    this.list$ = this.store.select(selectSqlObjectsList).pipe(takeUntil(this.destroy$));\n    this.store.select(selectRouterParam, 'connectionName').pipe(\n      filter(val => Boolean(val)), takeUntil(this.destroy$)).\n      subscribe(val => {\n        this.connectionName = val;\n        this.store.dispatch(new LoadSqlObjectsAction(this.connectionName));\n      });\n    this.store.select(selectSqlObjectStructure).pipe(\n      takeUntil(this.destroy$)).\n      subscribe(sqlObject => {\n        this.listView.selectItem(sqlObject);\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  onSelect(obj: SqlObject) {\n    const selectedItem = this.listView.selectedItem;\n    if (selectedItem) {\n      const {objectOwner, objectName} = selectedItem;\n      if (objectName !== obj.objectName || objectOwner !== objectOwner) {\n        this.store.dispatch(new SetLoadStateForSqlObject());\n      }\n    } else {\n      this.store.dispatch(new SetLoadStateForSqlObject());\n    }\n  }\n\n  areObjectsEqual(x: SqlObject, y: SqlObject) {\n    return x && y && x.objectName === y.objectName && x.objectOwner === y.objectOwner;\n  }\n\n  refresh() {\n    this.store.dispatch(new RefreshSqlObject());\n  }\n\n  import() {\n    this.dialogService.open(ImportCsvComponent, {class: 'modal-xl full-height', keyboard: false});\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlLW1hbmFnZXIvY29tcG9uZW50cy9zcWwtcXVlcnkvc3FsLXF1ZXJ5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ElementRef, ViewChild, HostListener } from '@angular/core';\nimport { Ace, edit } from 'ace-builds';\nimport { HttpClient } from '@angular/common/http';\nimport { Store } from '@ngrx/store';\nimport { of } from 'rxjs';\nimport { distinctUntilChanged, catchError } from 'rxjs/operators';\nimport { selectConnectionName } from '../../store/selectors';\nimport { DBManagerState } from '../../store';\nimport { environment } from 'src/environments/environment.prod';\nimport { mapTableToValues } from 'src/app/shared';\nimport { SqlTableData, SqlTypesToWijmoMap } from 'src/app/shared/models';\nimport { AuthService } from 'src/app/security';\nimport { ColumnInfo } from 'src/app/wijmo/models';\n\n@Component({\n  selector: 'app-sql-query',\n  templateUrl: './sql-query.component.html',\n  styleUrls: ['./sql-query.component.scss']\n})\nexport class SqlQueryComponent implements OnInit {\n\n  @ViewChild('sqlElement', {static: true}) sqlElement: ElementRef;\n  connection: string;\n  sqlEditor: Ace.Editor;\n  fields: ColumnInfo[];\n  data: any[];\n  error: string;\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (event.key === 'F5') {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n      this.onRun();\n    }\n  }\n\n  constructor(\n    private http: HttpClient,\n    private store: Store<DBManagerState>,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    this.store.select(selectConnectionName).pipe(\n      distinctUntilChanged()).subscribe(connection => {\n        this.connection = connection;\n    });\n\n    this.sqlEditor = edit(this.sqlElement.nativeElement, {\n      mode: 'ace/mode/sql',\n      autoScrollEditorIntoView: true\n    });\n  }\n\n  onRun() {\n    this.http.post<SqlTableData>(`${environment.apiBaseUrl}/sql/${this.connection}/execute`, {\n      sql: this.sqlEditor.getSelectedText() || this.sqlEditor.getValue()\n    }, this.authService.getHttpHeaders()).pipe(\n      catchError(e => {\n        this.error = typeof e.error === 'string' ? e.error : 'Failed to query data.';\n        return of(null);\n      })\n    ).subscribe(res => {\n      if (res) {\n        this.error = null;\n        this.fields = res.fields.map(f => {\n          return {\n            bindingName: f.fieldName,\n            dataType: SqlTypesToWijmoMap[f.dataType],\n            headerText: f.fieldName\n          };\n        });\n        this.data = mapTableToValues(res.table);\n      } else {\n        this.fields = null;\n        this.data = null;\n      }\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlLW1hbmFnZXIvY29tcG9uZW50cy9zcWwtdmlldy1vYmplY3Qvc3FsLXZpZXctb2JqZWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { selectSqlObjectStructure, selectSqlObjectLoadingMessages } from '../../store/selectors';\nimport { DBManagerState } from '../../store';\nimport { Observable } from 'rxjs';\nimport { MetaDataObject } from 'src/app/shared/models';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-sql-view-object',\n  templateUrl: './sql-view-object.component.html',\n  styleUrls: ['./sql-view-object.component.scss']\n})\nexport class SqlViewObjectComponent implements OnInit {\n\n  dataObject$: Observable<MetaDataObject>;\n  isSQLChanged$: Observable<boolean>;\n  loading$: Observable<any>;\n  constructor(private store: Store<DBManagerState>) {}\n\n  ngOnInit() {\n    this.dataObject$ = this.store.select(selectSqlObjectStructure);\n    this.loading$ = this.store.select(selectSqlObjectLoadingMessages);\n  }\n\n}\n","module.exports = \":host {\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n}\\n\\n.data-grid {\\n  height: calc(100% - 25px);\\n}\\n\\n.data-grid app-filter {\\n  -webkit-box-ordinal-group: 2;\\n          order: 1;\\n}\\n\\n.data-grid ::ng-deep .wj-cell.wj-header > div {\\n  display: -webkit-box;\\n  display: flex;\\n  height: 100%;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  max-height: 50px;\\n}\\n\\n.applied-filters-list {\\n  list-style-type: none;\\n}\\n\\n.text-normal {\\n  white-space: normal;\\n  word-break: break-word;\\n  width: 100%;\\n  padding-right: 5px;\\n  max-height: 50px;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  text-align: center;\\n  display: -webkit-box;\\n  -webkit-line-clamp: 2;\\n  -webkit-box-orient: vertical;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3ZrdWt1cmJhL0RldmVsb3BtZW50L1Byb2plY3RzL3Vwd29yay93b3Jrc2hlZXRzMi1hcHAvc3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvdGFibGUtZGF0YS90YWJsZS1kYXRhLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvdGFibGUtZGF0YS90YWJsZS1kYXRhLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNEJBQUE7RUFBQSw2QkFBQTtVQUFBLHNCQUFBO0FDQ0Y7O0FERUE7RUFDRSx5QkFBQTtBQ0NGOztBRENFO0VBQ0UsNEJBQUE7VUFBQSxRQUFBO0FDQ0o7O0FERUU7RUFDRSxvQkFBQTtFQUFBLGFBQUE7RUFDQSxZQUFBO0VBQ0EseUJBQUE7VUFBQSxtQkFBQTtFQUNBLGdCQUFBO0FDQUo7O0FESUE7RUFDRSxxQkFBQTtBQ0RGOztBRElBO0VBQ0UsbUJBQUE7RUFDQSxzQkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGdCQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0Esb0JBQUE7RUFDQSxxQkFBQTtFQUNBLDRCQUFBO0FDREYiLCJmaWxlIjoic3JjL2FwcC9kYXRhYmFzZS1tYW5hZ2VyL2NvbXBvbmVudHMvdGFibGUtZGF0YS90YWJsZS1kYXRhLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4uZGF0YS1ncmlkIHtcbiAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAyNXB4KTtcblxuICBhcHAtZmlsdGVyIHtcbiAgICBvcmRlcjogMTtcbiAgfVxuXG4gIDo6bmctZGVlcCAud2otY2VsbC53ai1oZWFkZXIgPiBkaXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWF4LWhlaWdodDogNTBweDtcbiAgfVxufVxuXG4uYXBwbGllZC1maWx0ZXJzLWxpc3Qge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG59XG5cbi50ZXh0LW5vcm1hbCB7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG4gIG1heC1oZWlnaHQ6IDUwcHg7XG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICAtd2Via2l0LWxpbmUtY2xhbXA6IDI7XG4gIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7XG59XG4iLCI6aG9zdCB7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5kYXRhLWdyaWQge1xuICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDI1cHgpO1xufVxuLmRhdGEtZ3JpZCBhcHAtZmlsdGVyIHtcbiAgb3JkZXI6IDE7XG59XG4uZGF0YS1ncmlkIDo6bmctZGVlcCAud2otY2VsbC53ai1oZWFkZXIgPiBkaXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1heC1oZWlnaHQ6IDUwcHg7XG59XG5cbi5hcHBsaWVkLWZpbHRlcnMtbGlzdCB7XG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbn1cblxuLnRleHQtbm9ybWFsIHtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctcmlnaHQ6IDVweDtcbiAgbWF4LWhlaWdodDogNTBweDtcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIC13ZWJraXQtbGluZS1jbGFtcDogMjtcbiAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbn0iXX0= */\"","import { Component, OnInit, OnDestroy, ViewChild, Input } from '@angular/core';\nimport { Actions, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport { takeUntil, withLatestFrom, switchMap, filter } from 'rxjs/operators';\nimport { FlexGrid, CellRangeEventArgs, CellType } from 'wijmo/wijmo.grid';\nimport { TableColumn, SQLDataTypes, SqlTypesToWijmoMap, TableDto, MetaDataObject, FileType } from 'src/app/shared/models';\nimport { DBManagerState } from '../../store';\nimport {\n  selectSqlObjectData, selectSqlObjectFieldsState, selectIsChangedSqlObjectData,\n  selectSqlObjectLoadingMessages,\n  selectSqlObjectLimitRows,\n  selectSqlObjectStructure,\n  selectSqlObjectRowsCount,\n  selectConnectionName\n} from '../../store/selectors';\nimport {\n  SaveSqlObjectDataAction, ActionTypes, UpdateSqlObjectDataAction,\n  SetSqlDataFilterPropAction,\n  SetSqlDataFiltersAction,\n  LoadSqlObjectDataAction\n} from '../../store/actions/sql-object';\nimport { initChangesHighlight, GridContext } from 'src/app/wijmo/utils';\nimport { mapTableToValues, getFilters, deepClone, dateToDtoString, formatWijmoDate, compareFields } from 'src/app/shared';\nimport { ColumnEditorComponent } from 'src/app/wijmo/components/column-editor/column-editor.component';\nimport { DialogService, FileManagerService } from 'src/app/shared/services';\nimport { ColumnInfo } from 'src/app/wijmo/models';\nimport { GrigConfig } from 'src/app/wijmo/components/grid-object-explorer/grid-config';\nimport { DataType } from 'wijmo/wijmo';\nimport { FlexGridXlsxConverter } from 'wijmo/wijmo.grid.xlsx';\n\n/**\n * @description Displays table data.\n */\n@Component({\n  selector: 'app-table-data',\n  templateUrl: './table-data.component.html',\n  styleUrls: ['./table-data.component.scss']\n})\nexport class TableDataComponent implements OnInit, OnDestroy {\n\n  data: any[];\n  fields$: Observable<TableColumn[]>;\n  isChanged$: Observable<boolean>;\n  loading$: Observable<any>;\n  // ToDo: What type it is? it is bound to array\n  filters: { [key: string]: any[] } = {};\n  fields: ColumnInfo[];\n  currentPage = 1;\n  limitRows: number;\n  dataObject: MetaDataObject;\n  connection: string;\n  localGridConfig: GrigConfig;\n  @ViewChild('grid', { static: true }) grid: FlexGrid;\n  @Input() isReadOnly: boolean;\n\n  private gridContext: GridContext;\n  private destroy$ = new Subject();\n  private columnToEdit: ColumnInfo;\n  private contextMenuValue: any;\n  private rowsCount: number;\n\n  constructor(\n    private store: Store<DBManagerState>,\n    private actions$: Actions,\n    private dialogService: DialogService,\n    private fileService: FileManagerService) { }\n\n  ngOnInit() {\n    this.isChanged$ = this.store.select(selectIsChangedSqlObjectData);\n    this.fields$ = this.store.select(selectSqlObjectFieldsState).pipe(\n      takeUntil(this.destroy$));\n\n    this.fields$.subscribe(fields => {\n      this.fields = fields.map(f => {\n        return {\n          isKey: f.isKey,\n          bindingName: f.fieldName,\n          sqlDataType: f.dataType,\n          headerText: this.getColumnHeader(f.fieldName),\n          width: this.getColumnWidth(f.fieldName),\n          dataType: this.getColumnType(f.fieldName, f.dataType),\n          displayFormat: this.getColumnDisplayFormat(f.fieldName)\n        };\n      });\n    });\n\n    this.store.select(selectConnectionName).subscribe(connection => {\n      this.connection = connection;\n    });\n\n    combineLatest([this.fields$, this.store.select(selectSqlObjectData)]).pipe(\n      filter(([fields]) => fields && fields.length !== 0),\n      takeUntil(this.destroy$)).subscribe(([fields, data]) => {\n        this.refreshData(data);\n      });\n\n    this.actions$.pipe(\n      ofType(ActionTypes.REFRESH_SQL_OBJECT),\n      takeUntil(this.destroy$),\n      withLatestFrom(this.store)).subscribe(([action, { sqlObject: { data } }]) => {\n        this.refreshData(data);\n        this.currentPage = 1;\n      });\n\n    this.loading$ = this.store.select(selectSqlObjectLoadingMessages);\n\n    this.store.select(selectSqlObjectLimitRows).subscribe(limit => {\n      this.limitRows = limit;\n    });\n    this.store.select(selectSqlObjectRowsCount).subscribe(rowsCount => {\n      this.rowsCount = rowsCount;\n    });\n    this.store.select(selectSqlObjectStructure).subscribe((obj) => {\n      this.dataObject = obj;\n      this.filters = {};\n      this.currentPage = 1;\n      this.localGridConfig = new GrigConfig(`database-${this.connection}`, `${obj.objectOwner}-${obj.objectName}`);\n      setTimeout(() => {\n        this.grid.autoSizeRow(0, true);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  saveData() {\n    this.store.dispatch(new SaveSqlObjectDataAction());\n  }\n\n  getColumnWidth(binding: string, defaultWidth: number | '*' = 150) {\n    return (this.localGridConfig && this.localGridConfig.getColumn(binding).width) || defaultWidth;\n  }\n\n  getColumnHeader(binding: string) {\n    return (this.localGridConfig && this.localGridConfig.getColumn(binding).header);\n  }\n\n  getColumnType(binding: string, type: SQLDataTypes) {\n    return (this.localGridConfig && this.localGridConfig.getColumn(binding).dataType) || SqlTypesToWijmoMap[type];\n  }\n\n  getColumnDisplayFormat(binding: string) {\n    return (this.localGridConfig && this.localGridConfig.getColumn(binding).displayFormat) || 'dd/MM/yyyy';\n  }\n\n  initializedGrid(grid: FlexGrid) {\n    this.gridContext = initChangesHighlight(grid);\n    grid.cellEditEnded.addHandler(() => this.changeHandler());\n    grid.deletedRow.addHandler(() => this.changeHandler());\n\n    grid.addEventListener(grid.hostElement, 'contextmenu', (e: CellRangeEventArgs) => {\n      const ht = grid.hitTest(e);\n      this.columnToEdit = this.fields.find((v, i) => ht.col === i);\n      const val = this.grid.collectionView.items[ht.row][this.columnToEdit.bindingName];\n      this.contextMenuValue = val;\n    });\n\n    const sItemsFormatter = grid.itemFormatter;\n\n    grid.itemFormatter = (panel, r, c, cell) => {\n      sItemsFormatter(panel, r, c, cell);\n      const binding = panel.columns[c].binding;\n      if (panel.cellType === CellType.ColumnHeader && cell.firstChild instanceof HTMLElement) {\n        const sortSpan = cell.firstChild.querySelector('#sort-icon');\n        if (sortSpan) {\n          cell.firstChild.removeChild(sortSpan);\n        }\n        const sortState = grid.collectionView.sortDescriptions[0];\n        if (sortState && sortState.property === binding) {\n          const span = document.createElement('SPAN');\n          span.id = 'sort-icon';\n          if (sortState.ascending) {\n            span.className = 'wj-glyph-up';\n          } else {\n            span.className = 'wj-glyph-down';\n          }\n          cell.firstChild.appendChild(span);\n        }\n      }\n    };\n\n    grid.sortingColumn.addHandler((s, e: any) => {\n      if (e.data.target.classList.contains('fa-filter')) {\n        e.cancel = true;\n      }\n    });\n\n    grid.resizingColumn.addHandler((s, evt: any) => {\n      if (this.localGridConfig) {\n        this.localGridConfig.saveColumn(grid.columns[evt.col].binding, {\n          width: grid.columns[evt.col].renderWidth\n        });\n      }\n    });\n  }\n\n  exportToCSV() {\n    this.fileService.exportToFile(this.grid.collectionView.sourceCollection, {\n      fileType: FileType.CSV,\n      fileName: `${this.dataObject.objectOwner}-${this.dataObject.objectName}`\n    });\n  }\n\n  exportToExcel() {\n    FlexGridXlsxConverter.saveAsync(this.grid, {\n      includeColumnHeaders: true\n    }, `${this.dataObject.objectOwner}-${this.dataObject.objectName}`);\n  }\n\n  onCtxMenuClicked(menu) {\n    switch (menu.value) {\n      case 'edit-column': this.editColumn(); break;\n      case 'fill-all': this.fillRows('all'); break;\n      case 'fill-empty': this.fillRows('empty'); break;\n    }\n  }\n\n  private editColumn() {\n    const columnEditDialog = this.dialogService.open(ColumnEditorComponent, { class: 'modal-lg' });\n    const columnInfo = this.columnToEdit;\n\n    columnEditDialog.config = [columnInfo];\n    columnEditDialog.init.pipe(switchMap(() => columnEditDialog.component.save)).subscribe((columns) => {\n      (columns as ColumnInfo[]).forEach(c => {\n        this.localGridConfig.saveColumn(c.bindingName, c);\n      });\n      const column = columns[0];\n      const index = this.fields.findIndex(f => f.bindingName === column.bindingName);\n      this.fields.splice(index, 1, column);\n    });\n  }\n\n  private fillRows(key: string) {\n    let isUpdated = false;\n    this.grid.collectionView.sourceCollection.forEach((item) => {\n      const binding = this.columnToEdit.bindingName;\n      const oldVal = item[binding];\n      if (this.updateCondition(oldVal, key)) {\n        item[binding] = this.contextMenuValue;\n        this.gridContext.setEditValue(item, binding, oldVal, this.contextMenuValue);\n        isUpdated = true;\n      }\n    });\n    if (isUpdated) {\n      this.grid.refresh(true);\n      this.changeHandler();\n    }\n  }\n\n  private updateCondition(oldVal: any, key: string): boolean {\n    switch (key) {\n      case 'all': return oldVal !== this.contextMenuValue;\n      case 'empty': return [null, undefined, ''].includes(oldVal);\n      default: return true;\n    }\n  }\n\n  private changeHandler() {\n    const { added, edited } = this.gridContext.state;\n    let data = [];\n    if (edited) {\n      data = [...data, ...edited];\n    }\n    if (added) {\n      data = [...data, ...added];\n    }\n    this.store.dispatch(new UpdateSqlObjectDataAction(data));\n  }\n\n  onFiltersChange(filters: { [key: string]: any[] }) {\n    this.filters = { ...filters };\n    this.applyFilters();\n  }\n\n  onApply(evt: any[], field: ColumnInfo) {\n    this.filters = { ...this.filters, [field.bindingName]: evt };\n    this.applyFilters();\n  }\n\n  get skipRows(): number {\n    return (this.currentPage - 1) * this.limitRows;\n  }\n\n  get filtersList() {\n    return Object.entries(this.filters).filter(([fieldName, value]) => Boolean(value)).map(([fieldName, value]) => {\n      return {\n        fieldName, value: value.map(v => {\n          const type = this.localGridConfig.getColumn(fieldName).dataType;\n          if (type === DataType.Date) {\n            const displayFormat = this.localGridConfig.getColumn(fieldName).displayFormat;\n            return formatWijmoDate(v, displayFormat);\n          }\n          if (v instanceof Date) {\n            return dateToDtoString(v);\n          }\n          if (v === null) {\n            return '[NULL]';\n          }\n          return v;\n        }).join(', ')\n      };\n    });\n  }\n\n  onNextPage(val: number): void {\n    if (this.currentPage >= 1 && val > 0 && this.skipRows + this.limitRows < this.rowsCount) {\n      this.currentPage++;\n    } else if (this.currentPage >= 2 && val < 0) {\n      this.currentPage--;\n    } else {\n      return;\n    }\n    if (this.limitRows) {\n      this.store.dispatch(new SetSqlDataFilterPropAction({ skipRowsCount: this.skipRows }));\n    }\n  }\n\n  private applyFilters(): void {\n    this.store.dispatch(new SetSqlDataFiltersAction({ filters: getFilters(this.filters) }));\n    this.store.dispatch(new LoadSqlObjectDataAction(this.dataObject));\n  }\n\n  private refreshData(data: TableDto): void {\n    this.data = this.formatData(deepClone(data));\n    if (this.gridContext) {\n      this.gridContext.clear();\n    }\n  }\n\n  private formatData(data: TableDto): Object[] {\n    if (data && data.fieldNames) {\n      data.dataTypes = data.fieldNames.map(field => {\n        const fieldData = this.fields.find(({ bindingName }) => bindingName === field);\n        return fieldData ? fieldData.sqlDataType : null;\n      });\n      return mapTableToValues(data);\n    }\n    return [];\n  }\n}\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Subject, Observable } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { AuthService } from 'src/app/security';\nimport { CellType, FlexGrid, CellRangeEventArgs } from 'wijmo/wijmo.grid';\nimport { CollectionView } from 'wijmo/wijmo';\nimport { DBManagerState } from '../../store';\nimport { selectSqlObjectStructure, selectSqlObjectState, selectIsChangedSqlObjectStructure } from '../../store/selectors';\nimport { MetaDataObject, TableColumn, SQLDataTypes, SqlTypesSizes } from '../../../shared/models';\nimport { SaveSqlObjectStructureAction, UpdateSqlObjectAction, DeleteSqlObjectAction } from '../../store/actions/sql-object';\nimport { compareSqlObjects, getTableColumns, verifyFields } from 'src/app/shared';\nimport { getFormattedFields, getPrimaryKeys, getFormattedColumns } from '../../utils';\nimport { DialogService } from 'src/app/shared/services';\n\n/**\n * @description Component represents editable table structure.\n */\n@Component({\n  selector: 'app-table-editor',\n  templateUrl: './table-editor.component.html',\n  styles: [`\n    .table-title {\n      flex: 0;\n    }\n  `]\n})\nexport class TableEditorComponent implements OnInit, OnDestroy {\n  readonly dataTypes = Object.values(SQLDataTypes);\n  @ViewChild('form', {static: false}) form: NgForm;\n  @ViewChild('grid', {static: false}) grid: FlexGrid;\n  dataObject: MetaDataObject;\n  tableColumns: TableColumn[];\n  collection: CollectionView = new CollectionView();\n  isChanged$: Observable<boolean>;\n  private editCollectionMap = new Map<object, object>();\n  private addCollectionSet = new Set();\n  private destroy$ = new Subject();\n\n  constructor(\n    private store: Store<DBManagerState>,\n    private authService: AuthService,\n    private dialogService: DialogService) { }\n\n  ngOnInit() {\n    this.store.select(selectSqlObjectStructure).pipe(\n      takeUntil(this.destroy$),\n      filter(o => Boolean(o))).subscribe(obj => {\n        this.editCollectionMap.clear();\n        this.addCollectionSet.clear();\n        if (this.grid) {\n          this.grid.refreshCells(false);\n        }\n      });\n\n    this.store.select(selectSqlObjectState).pipe(\n      takeUntil(this.destroy$)).subscribe(obj => {\n        if (!compareSqlObjects(this.dataObject, obj)) {\n          this.dataObject = obj;\n          const items = getTableColumns(obj);\n\n          if (!verifyFields(getFormattedColumns(this.collection.items), items)) {\n            this.collection.sourceCollection = items;\n          }\n        }\n\n      if (!this.dataObject.objectOwner && this.authService.user) {\n        this.dataObject.objectOwner = this.authService.user.userName;\n        this.store.dispatch(new UpdateSqlObjectAction(this.dataObject));\n      }\n    });\n\n    this.isChanged$ = this.store.select(selectIsChangedSqlObjectStructure);\n  }\n\n  formatItem = (panel, r, c, cell) => {\n    const dataItem = panel.rows[r].dataItem;\n    const binding = panel.columns[c].binding;\n    const initData = this.editCollectionMap.get(dataItem);\n    if (panel.cellType === CellType.Cell && dataItem) {\n      if (this.addCollectionSet.has(dataItem)) {\n        cell.classList.add('added-item');\n      } else if (initData && initData.hasOwnProperty(binding)) {\n        cell.classList.add('edited-item');\n      } else {\n        cell.classList.remove('added-item');\n        cell.classList.remove('edited-item');\n      }\n    }\n  }\n\n  /**\n   * TODO: use `initChangesHighlight` from 'src/app/wijmo/utils'.\n   */\n  initializedGrid(grid: FlexGrid) {\n    this.collection.trackChanges = true;\n    grid.rowAdded.addHandler((g, e) => {\n      this.addCollectionSet.add(this.collection.currentAddItem);\n      grid.refreshCells(false);\n    });\n    grid.cellEditEnded.addHandler((g, e: CellRangeEventArgs) => {\n      const item = this.collection.currentEditItem;\n      const dataType = item.dataType;\n      const size = SqlTypesSizes[dataType] || null;\n      const sizeBinding = grid.columns[3].binding;\n      const sizePrev = this.collection.currentEditItem[sizeBinding];\n\n      if (!this.addCollectionSet.has(item)) {\n        const binding = grid.columns[e.col].binding;\n        const newVal = grid.rows[e.row].dataItem[binding];\n        const initDataItem = this.editCollectionMap.get(item) || {};\n        if (!initDataItem.hasOwnProperty(binding)) {\n          initDataItem[binding] = e.data;\n        }\n\n        if (initDataItem[binding] === newVal) {\n          delete initDataItem[binding];\n        }\n\n        // Set default size.\n        if (e.panel.cellType === CellType.Cell && e.col === 2) {\n          if (!initDataItem.hasOwnProperty(sizeBinding)) {\n            initDataItem[sizeBinding] = sizePrev;\n          }\n\n          if (initDataItem[sizeBinding] === size) {\n            delete initDataItem[sizeBinding];\n          }\n        }\n        this.editCollectionMap.set(item, initDataItem);\n      }\n\n      if (e.panel.cellType === CellType.Cell && e.col === 2) {\n        item[sizeBinding] = size;\n      }\n      grid.refreshCells(false);\n      this.onFieldsUpdate();\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  save() {\n    this.form.ngSubmit.emit();\n  }\n\n  onTableDelete() {\n    if (this.dataObject) {\n      const { objectName, objectOwner } = this.dataObject;\n      const message = `Delete table ${objectOwner}.${objectName}. Are you sure?`;\n      this.dialogService.confirmation(message).subscribe(val => {\n        if (val) {\n          this.store.dispatch(new DeleteSqlObjectAction(this.dataObject));\n        }\n      });\n    }\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.store.dispatch(new SaveSqlObjectStructureAction(this.getCurrentState()));\n    }\n  }\n\n  onUpdate() {\n    this.store.dispatch(new UpdateSqlObjectAction(this.getCurrentState()));\n  }\n\n  onFieldsUpdate() {\n    this.store.dispatch(new UpdateSqlObjectAction(this.getCurrentState()));\n  }\n\n  private getCurrentState(): MetaDataObject {\n    return {\n      ...this.dataObject,\n      fields: getFormattedFields(this.collection.items),\n      primaryKeys: getPrimaryKeys(this.collection.items)\n    };\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhdGFiYXNlLW1hbmFnZXIvY29tcG9uZW50cy92aWV3LWVkaXRvci92aWV3LWVkaXRvci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, OnDestroy, ElementRef, AfterViewInit, Output, EventEmitter } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { CollectionView } from 'wijmo/wijmo';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Ace, edit } from 'ace-builds';\nimport { Store } from '@ngrx/store';\nimport { DBManagerState } from '../../store';\nimport { selectSqlObjectState } from '../../store/selectors';\nimport { DeleteSqlObjectAction, UpdateSqlObjectAction, SaveSqlObjectStructureAction } from '../../store/actions/sql-object';\nimport { AuthService } from 'src/app/security';\nimport { DialogService } from 'src/app/shared/services';\nimport { MetaDataObject, TableColumn } from 'src/app/shared/models/sql-data';\nimport { getTableColumns } from 'src/app/shared';\nimport { ObjectType } from '../../models';\n\n@Component({\n  selector: 'app-view-editor',\n  templateUrl: './view-editor.component.html',\n  styleUrls: ['./view-editor.component.scss']\n})\nexport class ViewEditorComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  dataObject: MetaDataObject;\n  tableColumns: TableColumn[];\n  collection: CollectionView = new CollectionView();\n  isChanged = false;\n  @Output() changed = new EventEmitter();\n  @ViewChild('form', {static: false}) form: NgForm;\n  @ViewChild('sqlEditor', {static: false}) sqlElement: ElementRef;\n  private destroy$ = new Subject();\n  private sqlEditor: Ace.Editor;\n  private initialSql: string;\n\n  constructor(\n    private store: Store<DBManagerState>,\n    private authService: AuthService,\n    private dialogService: DialogService) { }\n\n  ngOnInit() {\n    this.store.select(selectSqlObjectState).pipe(\n      takeUntil(this.destroy$)).subscribe(obj => {\n        this.dataObject = obj;\n        this.dataObject.objectType = ObjectType.View;\n        this.initialSql = obj.sqlText;\n        if (obj.objectName === 'New') {\n          this.dataObject.sqlText = 'create view test1.testView1';\n        }\n        if (this.sqlEditor && typeof obj.sqlText === 'string') {\n          this.sqlEditor.setValue(obj.sqlText, -1);\n        }\n        this.collection.sourceCollection = getTableColumns(obj);\n        if (!this.dataObject.objectOwner) {\n          this.dataObject.objectOwner = this.authService.user.userName;\n          this.store.dispatch(new UpdateSqlObjectAction(this.dataObject));\n        }\n    });\n  }\n\n  ngAfterViewInit() {\n    this.sqlEditor = edit(this.sqlElement.nativeElement, {\n      mode: 'ace/mode/sql',\n      autoScrollEditorIntoView: true,\n      value: this.dataObject.sqlText || '0'\n    });\n\n    this.sqlEditor.on('change', () => {\n      const val = this.sqlEditor.getValue();\n      this.isChanged = this.initialSql !== val;\n      this.dataObject.sqlText = val;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n\n  onViewDelete() {\n    if (this.dataObject) {\n      const { objectName, objectOwner } = this.dataObject;\n      const message = `Delete view ${objectOwner}.${objectName}. Are you sure?`;\n      this.dialogService.confirmation(message).subscribe(val => {\n        if (val) {\n          this.store.dispatch(new DeleteSqlObjectAction(this.dataObject));\n        }\n      });\n    }\n  }\n\n  onSubmit() {\n    this.store.dispatch(new SaveSqlObjectStructureAction(this.dataObject));\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ManagerLayoutComponent } from './components/manager-layout/manager-layout.component';\nimport { ConnectionGuard } from './guards/connection.guard';\nimport { SqlViewObjectComponent } from './components/sql-view-object/sql-view-object.component';\nimport { SqlObjectContentComponent } from './components/sql-object-content/sql-object-content.component';\nimport { SqlQueryComponent } from './components/sql-query/sql-query.component';\n\n\nconst routes: Routes = [{\n  path: ':connectionName',\n  component: ManagerLayoutComponent,\n  canActivate: [ConnectionGuard],\n  children: [{\n    component: SqlObjectContentComponent,\n    path: ''\n  }, {\n    component: SqlObjectContentComponent,\n    path: ':ownerName/:objectName'\n  }, {\n    component: SqlViewObjectComponent,\n    path: 'view'\n  }, {\n    component: SqlViewObjectComponent,\n    path: 'view/:ownerName/:objectName'\n  }, {\n    component: SqlQueryComponent,\n    path: 'sql-query'\n  }]\n}];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class DatabaseManagerRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\n\n// import ngx-bootstrap modules\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { WjInputModule } from 'wijmo/wijmo.angular2.input';\nimport { AngularSplitModule } from 'angular-split';\n\nimport { environment } from 'src/environments/environment';\nimport { reducers, metaReducers } from './store';\nimport { DBManagerEffects, SqlObjectEffects } from './store/effects';\nimport { SharedModule } from 'src/app/shared';\nimport { WijmoModule } from 'src/app/wijmo/wijmo.module';\nimport { DialogService } from 'src/app/shared/services';\n\nimport { DatabaseManagerRoutingModule } from './database-manager-routing.module';\nimport { ManagerLayoutComponent } from './components/manager-layout/manager-layout.component';\nimport { SqlObjectsComponent } from './components/sql-objects/sql-objects.component';\nimport { DbConnectionsComponent } from './components/db-connections/db-connections.component';\nimport { TableEditorComponent } from './components/table-editor/table-editor.component';\nimport { ConnectionGuard } from './guards/connection.guard';\nimport { TableDataComponent } from './components/table-data/table-data.component';\nimport { SqlQueryComponent } from './components/sql-query/sql-query.component';\nimport { ImportCsvComponent } from './components/import-csv/import-csv.component';\nimport { SqlObjectContentComponent } from './components/sql-object-content/sql-object-content.component';\nimport { PreviewDataComponent } from './components/preview-data/preview-data.component';\nimport { SqlViewObjectComponent } from './components/sql-view-object/sql-view-object.component';\nimport { RowsCountComponent } from './components/rows-count/rows-count.component';\nimport { ViewEditorComponent } from './components/view-editor/view-editor.component';\n\n@NgModule({\n  declarations: [\n    ManagerLayoutComponent,\n    SqlObjectsComponent,\n    DbConnectionsComponent,\n    TableEditorComponent,\n    TableDataComponent,\n    SqlQueryComponent,\n    ImportCsvComponent,\n    SqlObjectContentComponent,\n    PreviewDataComponent,\n    SqlViewObjectComponent,\n    RowsCountComponent,\n    ViewEditorComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    StoreModule.forRoot(reducers),\n    StoreRouterConnectingModule.forRoot(),\n    EffectsModule.forRoot([DBManagerEffects, SqlObjectEffects]),\n    DatabaseManagerRoutingModule,\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production, // Restrict extension to log-only mode\n    }),\n    WjInputModule,\n    AlertModule.forRoot(),\n    ButtonsModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    TabsModule.forRoot(),\n    PopoverModule.forRoot(),\n    WijmoModule\n  ],\n  providers: [ConnectionGuard, DialogService],\n  entryComponents: [ImportCsvComponent, PreviewDataComponent]\n})\nexport class DatabaseManagerModule { }\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { DBManagerState } from '../store';\nimport { selectRouterParam } from '../store/selectors';\nimport { CanActivate, Router } from '@angular/router';\nimport { switchMap, map, catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { SqlDbService } from 'src/app/shared/services';\nimport { LoadedConnections } from '../store/actions/sql-objects';\nimport { DBConnection } from 'src/app/shared/models';\n/**\n * @description Guard validates connection name.\n */\n@Injectable()\nexport class ConnectionGuard implements CanActivate {\n  constructor(private store: Store<DBManagerState>, private dbService: SqlDbService, private router: Router) {}\n\n  canActivate(): Observable<boolean> {\n    return this.store.select(selectRouterParam, 'connectionName').pipe(\n      switchMap((connection) => {\n        if (connection) {\n          return this.dbService.getMyDbConnections().pipe(\n            catchError(e => {\n              return of([] as DBConnection[]);\n            }),\n            map((connections) => {\n              try {\n                this.store.dispatch(new LoadedConnections(connections));\n              } catch (e) {\n                return false;\n              }\n              return connections.map(c => c.connectorName.toLowerCase()).includes(connection.toLowerCase());\n            }));\n        }\n        this.router.navigate(['/login']);\n        return of(false);\n      }));\n  }\n}\n","import { MapTableColumn } from './models';\nimport { formatToValidSqlName } from './utils';\nimport * as moment from 'moment';\nimport { SQLDataTypes } from '../shared/models';\nimport { parseDatetimeOrNull, parseNumberOrNull } from '../shared';\n\nclass Proprocessor {\n  run(data: any[][], columns: MapTableColumn[]) {\n    const columnIndexMap = data[0].reduce((prev, v, i) => {\n      prev[formatToValidSqlName(v)] = i;\n      return prev;\n    }, {});\n\n\n    const res = data.map((row, i) => {\n      if (i === 0) {\n        return row;\n      } else {\n        return columns.map((column, index) => {\n          let val = null;\n          if (column.sourceField && typeof columnIndexMap[column.sourceField] === 'number') {\n            val = row[columnIndexMap[column.sourceField]];\n            if (column.dataType === SQLDataTypes.DATE && !(val instanceof Date)) {\n              val = parseDatetimeOrNull(val);\n            } else if ((column.dataType === SQLDataTypes.INT\n              || column.dataType === SQLDataTypes.BIGINT\n              || column.dataType === SQLDataTypes.FLOAT) && typeof val !== 'number') {\n              val = parseNumberOrNull(val);\n            }\n          }\n          const { preprocessFunc, preprocessParams } = columns[index];\n          if (preprocessFunc && this[preprocessFunc]) {\n            return this[preprocessFunc](val, preprocessParams, i);\n          }\n          return val;\n        });\n      }\n    }).slice(1);\n    return res;\n  }\n\n  private text(val, param) {\n    return param;\n  }\n\n  private parseNumber(val, param: string) {\n    if (typeof val === 'number') {\n      return val;\n    } else if (typeof val === 'boolean') {\n      return +val;\n    } else if (typeof val === 'string') {\n      val = val.replace(/,/g, '');\n      if (param) {\n        param.split('').forEach(v => {\n          val = val.replace(v, '');\n        });\n      }\n      const koef = this.getKoef(val);\n      try {\n        val = parseFloat(val);\n        return val * koef;\n      } catch (e) {\n        return null;\n      }\n    }\n    return null;\n  }\n\n  private parseBoolean(val: any) {\n    const trulyVals = ['1', 'yes', 'true', 'on'];\n    const falsyVals = ['0', 'no', 'false', 'off'];\n    const checkVal = val.toString().toLowerCase();\n\n    if (trulyVals.includes(checkVal)) {\n      return true;\n    }\n\n    if (falsyVals.includes(checkVal)) {\n      return false;\n    }\n\n    return null;\n  }\n\n  private parseDate(val: any, params: string): Date {\n    if (!val) {\n      return null;\n    }\n\n    const date = params ? moment(val, params.split(',')) : moment(val);\n\n    return date.isValid() ? date.toDate() : null;\n  }\n\n  /**\n   * Generates id based on row index and initial value.\n   * @param val Cell value.\n   * @param param Initial id value.\n   * @param index Row index.\n   */\n  private autoid(val: any, param: string, index: number) {\n    let startIndex = 0;\n    try {\n      startIndex = parseInt(param, 10);\n      if (isNaN(startIndex)) {\n        startIndex = 0;\n      }\n    } catch (e) { }\n\n    return startIndex + index;\n  }\n\n  private getKoef(str: string) {\n    if (str.includes('k')) {\n      return 1000;\n    }\n\n    if (str.includes('m')) {\n      return 1000000;\n    }\n\n    if (str.includes('b')) {\n      return 1000000000;\n    }\n\n    return 1;\n  }\n\n}\n\nexport enum ProcessFuncToType {\n  'autoid' = SQLDataTypes.INT,\n  'text' = SQLDataTypes.NVARCHAR,\n  'parseDate' = SQLDataTypes.DATE,\n  'parseBoolean' = SQLDataTypes.BIT,\n  'parseNumber' = SQLDataTypes.INT\n}\n\nexport default new Proprocessor();\n","import { Action } from '@ngrx/store';\n\n/** @description Enum of common module actions. */\nexport enum ActionTypes {\n  ERROR = '[DB Manager] error',\n  SUCCESS = '[DB Manager] success',\n}\n\nexport class ErrorAction implements Action {\n  readonly type = ActionTypes.ERROR;\n\n  constructor(public payload: string) {}\n}\n\nexport class SuccessAction implements Action {\n  readonly type = ActionTypes.SUCCESS;\n\n  constructor(public payload: string) {}\n}\n","import { Action } from '@ngrx/store';\nimport { ObjectOwner, TableDto, SqlField } from 'src/app/shared/models';\nimport { MetaDataObject } from '../../../shared/models/sql-data';\n\n/**\n * @description Enum of actions related to selected sql object.\n */\nexport enum ActionTypes {\n  LOAD_SQL_OBJECT_DATA = '[DB Manager] load sql object data',\n  LOADED_SQL_OBJECT_DATA = '[DB Manager] loaded sql object data',\n\n  LOAD_SQL_OBJECT_STRUCTURE = '[DB Manager] load sql object structure',\n  LOADED_SQL_OBJECT_STRUCTURE = '[DB Manager] loaded sql object structure',\n\n  SAVE_SQL_OBJECT_STRUCTURE = '[DB Manager] save sql object structure',\n  SAVED_SQL_OBJECT_STRUCTURE = '[DB Manager] saved sql object structure',\n  SAVE_SQL_OBJECT_DATA = '[DB Manager] save sql object data',\n  UPDATE_SQL_OBJECT_DATA = '[DB Manager] update sql object data',\n\n  DELETE_SQL_OBJECT = '[DB Manager] delete sql object',\n  UPDATE_SQL_OBJECT = '[DB Manager] update state of sql object',\n\n  REFRESH_SQL_OBJECT = '[DB Manager] refresh sql object',\n  LOAD_STATE_SQL_OBJECT = '[DB Manager] load state',\n\n  SET_SQL_DATA_FILTERS = '[DB Manager] set sql data filters',\n  SET_SQL_DATA_ROWS_COUNT = '[DB Manager] set sql data rows count',\n  SET_SQL_DATA_FILTER_PROP = '[DB Manager] set sql data filter property'\n}\n\nexport class LoadSqlObjectDataAction implements Action {\n  readonly type = ActionTypes.LOAD_SQL_OBJECT_DATA;\n\n  constructor(public payload?: ObjectOwner) {}\n}\n\nexport class LoadedSqlObjectDataAction implements Action {\n  readonly type = ActionTypes.LOADED_SQL_OBJECT_DATA;\n\n  constructor(public payload: TableDto) {}\n}\n\nexport class LoadSqlObjectStructureAction implements Action {\n  readonly type = ActionTypes.LOAD_SQL_OBJECT_STRUCTURE;\n\n  constructor(public payload: ObjectOwner) {}\n}\n\nexport class LoadedSqlObjectStructureAction implements Action {\n  readonly type = ActionTypes.LOADED_SQL_OBJECT_STRUCTURE;\n\n  constructor(public payload: MetaDataObject) {}\n}\n\nexport class SaveSqlObjectStructureAction implements Action {\n  readonly type = ActionTypes.SAVE_SQL_OBJECT_STRUCTURE;\n\n  constructor(public payload: MetaDataObject) {}\n}\n\nexport class SaveSqlObjectDataAction implements Action {\n  readonly type = ActionTypes.SAVE_SQL_OBJECT_DATA;\n}\n\nexport class UpdateSqlObjectDataAction implements Action {\n  readonly type = ActionTypes.UPDATE_SQL_OBJECT_DATA;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class DeleteSqlObjectAction implements Action {\n  readonly type = ActionTypes.DELETE_SQL_OBJECT;\n\n  constructor(public payload: MetaDataObject) {}\n}\n\nexport class UpdateSqlObjectAction implements Action {\n  readonly type = ActionTypes.UPDATE_SQL_OBJECT;\n\n  constructor(public payload: MetaDataObject) {}\n}\n\nexport class SavedSqlObjectStructure implements Action {\n  readonly type = ActionTypes.SAVED_SQL_OBJECT_STRUCTURE;\n}\n\nexport class RefreshSqlObject implements Action {\n  readonly type = ActionTypes.REFRESH_SQL_OBJECT;\n}\n\nexport class SetLoadStateForSqlObject implements Action {\n  readonly type = ActionTypes.LOAD_STATE_SQL_OBJECT;\n}\n\nexport class SetSqlDataFiltersAction implements Action {\n  readonly type = ActionTypes.SET_SQL_DATA_FILTERS;\n\n  constructor(public payload: any) {}\n}\n\nexport class SetSqlDataRowsCountAction implements Action {\n  readonly type = ActionTypes.SET_SQL_DATA_ROWS_COUNT;\n\n  constructor(public payload: number) {}\n}\n\nexport class SetSqlDataFilterPropAction implements Action {\n  readonly type = ActionTypes.SET_SQL_DATA_FILTER_PROP;\n\n  constructor(public payload: {[key: string]: string|number}) {}\n}\n\nexport type ActionsUnion = LoadSqlObjectDataAction | LoadedSqlObjectDataAction |\n  LoadSqlObjectStructureAction | LoadedSqlObjectStructureAction | SaveSqlObjectDataAction |\n  UpdateSqlObjectAction | UpdateSqlObjectDataAction | RefreshSqlObject | SetLoadStateForSqlObject |\n  SetSqlDataFiltersAction | SetSqlDataRowsCountAction | SetSqlDataFilterPropAction;\n","import { Action } from '@ngrx/store';\n\n/** @description Enum sql object list actions. */\nexport enum ActionTypes {\n  LOAD_SQL_OBJECTS = '[DB Manager] load sql objects',\n  LOADED_SQL_OBJECTS = '[DB Manager] loaded sql objects',\n\n  SELECT_CONNECTION = '[DB Manager] select connection',\n  LOADED_CONNECTIONS = '[DB Manager] loaded connections',\n}\n\nexport class LoadSqlObjectsAction implements Action {\n  readonly type = ActionTypes.LOAD_SQL_OBJECTS;\n\n  constructor(public payload: string) {}\n}\n\nexport class LoadedSqlObjectsAction implements Action {\n  readonly type = ActionTypes.LOADED_SQL_OBJECTS;\n\n  constructor(public payload: any[]) {}\n}\n\nexport class SelectConnection implements Action {\n  readonly type = ActionTypes.SELECT_CONNECTION;\n\n  constructor(public payload: string) {}\n}\n\nexport class LoadedConnections implements Action {\n  readonly type = ActionTypes.LOADED_CONNECTIONS;\n\n  constructor(public payload: any[]) {}\n}\n\n\nexport type ActionsUnion = LoadSqlObjectsAction | LoadedSqlObjectsAction | SelectConnection | LoadedConnections;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, switchMap, map } from 'rxjs/operators';\nimport { ActionTypes, LoadedSqlObjectsAction } from '../actions/sql-objects';\n\nimport { NotificationService, SqlDbService } from 'src/app/shared/services';\nimport { environment } from 'src/environments/environment';\nimport * as rootActions from '../actions/index';\nimport { NotificationType } from 'src/app/shared/models';\n\nexport * from './sql-object';\n\n@Injectable()\nexport class DBManagerEffects {\n  constructor(\n    private actions$: Actions,\n    private notificationService: NotificationService,\n    private sqlDb: SqlDbService) {}\n\n  @Effect()\n  loadSqlObjects$ = this.actions$.pipe(\n    ofType(ActionTypes.LOAD_SQL_OBJECTS),\n    switchMap(({payload}) => this.sqlDb.getSqlObjects(`${environment.apiBaseUrl}/sql/${payload}`)),\n    map(objects => new LoadedSqlObjectsAction(objects)),\n    catchError(e => of(new rootActions.ErrorAction(e.message))));\n\n  @Effect()\n  errorHandler$ = this.actions$.pipe(\n    ofType(rootActions.ActionTypes.ERROR),\n    map(({payload}) => {\n      this.notificationService.open({\n        message: payload,\n        type: NotificationType.DANGER\n      });\n      return {type: `[DB Manager] Shown Error: ${payload}`};\n    }));\n\n  @Effect()\n  successHandler$ = this.actions$.pipe(\n    ofType(rootActions.ActionTypes.SUCCESS),\n    map(({payload}) => {\n      this.notificationService.open({\n        message: payload,\n        type: NotificationType.SUCCESS\n      });\n      return {type: `[DB Manager] Shown Success: ${payload}`};\n    }));\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, switchMap, map, withLatestFrom } from 'rxjs/operators';\n\nimport { SqlDbService } from 'src/app/shared/services';\nimport { TableDto, MetaDataObject } from 'src/app/shared/models';\nimport { environment } from 'src/environments/environment';\nimport { ActionTypes, LoadedSqlObjectStructureAction,\n  LoadedSqlObjectDataAction, SavedSqlObjectStructure, LoadSqlObjectDataAction } from '../actions/sql-object';\nimport * as rootActions from '../actions/index';\nimport { Store } from '@ngrx/store';\nimport { DBManagerState } from '../reducers';\nimport { compareSqlObjects, getErrorMessage, mapValuesToTable } from 'src/app/shared';\nimport { LoadSqlObjectsAction } from '../actions/sql-objects';\nimport { Router } from '@angular/router';\nimport { ObjectType } from '../../models';\n\nconst API_URL = `${environment.apiBaseUrl}/sql`;\n\n@Injectable()\nexport class SqlObjectEffects {\n  constructor(\n    private actions$: Actions,\n    private sqlDb: SqlDbService,\n    private store: Store<DBManagerState>,\n    private router: Router) {}\n\n  @Effect()\n  loadSqlObjectStructure$ = this.actions$.pipe(\n    ofType<any>(ActionTypes.LOAD_SQL_OBJECT_STRUCTURE),\n    withLatestFrom(this.store),\n    switchMap(([{payload}, {dbConnections: {current}}]) =>\n      this.sqlDb.getObject(`${API_URL}/${current}`, payload.objectOwner, payload.objectName, payload.objectType).\n      pipe(\n        map(metaData => new LoadedSqlObjectStructureAction(metaData as MetaDataObject)),\n        catchError(e => of(\n          new rootActions.ErrorAction(e.message),\n          new LoadedSqlObjectStructureAction(null)\n        )))\n    ));\n\n  @Effect()\n  loadSqlObjectData$ = this.actions$.pipe(\n    ofType<any>(ActionTypes.LOAD_SQL_OBJECT_DATA),\n    withLatestFrom(this.store),\n    switchMap(([{payload}, {dbConnections: {current}, sqlObject: {filters}}]) =>\n      this.sqlDb.selectSqlObjectData(current, payload.objectOwner, payload.objectName, filters).\n        pipe(\n          map(data => new LoadedSqlObjectDataAction(data as TableDto)),\n          catchError(e => of(\n            new rootActions.ErrorAction(e),\n            new LoadedSqlObjectDataAction(null)\n          )))\n      ));\n\n  @Effect()\n  saveSqlObjectStructure$ = this.actions$.pipe(\n    ofType(ActionTypes.SAVE_SQL_OBJECT_STRUCTURE),\n    withLatestFrom(this.store),\n    switchMap(([{payload}, store]) => {\n      if (!compareSqlObjects(payload, store.sqlObject.structure)) {\n        return this.sqlDb.generateObject(`${API_URL}/${store.dbConnections.current}`, payload).pipe(\n          switchMap(dataObject => [\n              new LoadSqlObjectsAction(store.dbConnections.current),\n              new LoadedSqlObjectStructureAction(dataObject),\n              new SavedSqlObjectStructure(),\n              new rootActions.SuccessAction('SQL Structure saved'),\n            ]),\n          catchError(e => {\n            return of(new rootActions.ErrorAction(getErrorMessage(e)));\n          }));\n      }\n      return [new SavedSqlObjectStructure(), {type: 'Sql structure not changed'}];\n    }));\n\n  @Effect()\n  saveSqlObjectData$ = this.actions$.pipe(\n    ofType(ActionTypes.SAVE_SQL_OBJECT_DATA),\n    withLatestFrom(this.store),\n    switchMap(([action, {dbConnections, sqlObject}]) =>\n      this.sqlDb.saveSqlObjectData(dbConnections.current, sqlObject.structure,\n        {tableData: mapValuesToTable(sqlObject.changedData)}).pipe(\n        switchMap(() => [\n          new LoadSqlObjectDataAction(sqlObject.structure),\n          new rootActions.SuccessAction('SQL Object data saved')]),\n        catchError(e => {\n          return of(new rootActions.ErrorAction(e.error || 'Server error'));\n        }))\n    ));\n\n  @Effect()\n  deleteSqlObject$ = this.actions$.pipe(\n    ofType(ActionTypes.DELETE_SQL_OBJECT),\n    withLatestFrom(this.store),\n    switchMap(([{payload}, store]) =>\n      this.sqlDb.deleteObject(`${API_URL}/${store.dbConnections.current}`, payload).pipe(\n        switchMap(() => {\n          this.router.navigate(['/database', store.dbConnections.current]);\n          return [\n            new rootActions.SuccessAction('SQL Object deleted'),\n            new LoadSqlObjectsAction(store.dbConnections.current),\n            new LoadedSqlObjectDataAction(null),\n            new LoadedSqlObjectStructureAction(null)\n          ];\n        }),\n        catchError(e => {\n          const errors = [e.error.title, Object.values(e.error.errors)];\n          return of(new rootActions.ErrorAction(errors.join('\\n')));\n        }))\n    ));\n\n  @Effect()\n  loadedSqlObject$ = this.actions$.pipe(\n    ofType(ActionTypes.LOADED_SQL_OBJECT_STRUCTURE),\n    withLatestFrom(this.store),\n    map(([{payload}, store]) => {\n      let urlPath = ['/database', store.dbConnections.current];\n      if (payload) {\n        const {objectOwner, objectName, objectType} = payload as MetaDataObject;\n        if (objectType === ObjectType.View) {\n          urlPath.push('view');\n        }\n        urlPath = [...urlPath, objectOwner, objectName];\n        this.router.navigate(urlPath);\n      }\n      return {type: 'Route checked after table structure update'};\n    }));\n\n  @Effect()\n  limitRowsCount$ = this.actions$.pipe(\n    ofType(ActionTypes.SET_SQL_DATA_FILTER_PROP),\n    withLatestFrom(this.store),\n    map(([prop, {sqlObject: {structure}}]) => new LoadSqlObjectDataAction(structure)));\n  }\n","export * from './reducers';\n","import { ActionReducerMap, MetaReducer } from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport * as fromRouter from '@ngrx/router-store';\nimport * as sqlObjectsRoot from './sql-objects';\nimport * as sqlObjectRoot from './sql-object';\n\nexport interface DBManagerState {\n  sqlObjects: sqlObjectsRoot.SqlObjectsState;\n  dbConnections: sqlObjectsRoot.ConnectionsState;\n  sqlObject: any;\n  router: fromRouter.RouterReducerState<any>;\n}\n\nexport const reducers: ActionReducerMap<DBManagerState> = {\n  sqlObjects: sqlObjectsRoot.sqlObjectsReducer,\n  dbConnections: sqlObjectsRoot.connectonsReducer,\n  sqlObject: sqlObjectRoot.sqlObjectsReducer,\n  router: fromRouter.routerReducer\n};\n\nexport const metaReducers: MetaReducer<DBManagerState>[] = !environment.production ? [] : [];\n","import { ActionsUnion, ActionTypes } from '../actions/sql-object';\nimport { MetaDataObject, TableDto, SelectBody } from 'src/app/shared/models';\nimport { LoadingStates } from '../../models';\nimport { deepClone } from 'src/app/shared';\n\nexport interface SqlObjectState {\n  structure: MetaDataObject;\n  currentState: MetaDataObject;\n  data: TableDto;\n  changedData: any[];\n  filters: SelectBody;\n  loading: string[];\n  rowsCount: number;\n}\n\nconst initStructure: MetaDataObject = {\n  fields: [],\n  details: {},\n  objectId: 0,\n  objectOwner: null,\n  objectName: 'New',\n  objectType: 'Table'\n};\n\nconst initState: SqlObjectState = {\n  structure: {...initStructure},\n  data: null,\n  currentState: {...initStructure},\n  changedData: null,\n  filters: {\n    limitRowsCount: 1000,\n    skipRowsCount: 0\n  },\n  loading: [],\n  rowsCount: 0\n};\n\nexport function sqlObjectsReducer(state: SqlObjectState = initState, action: ActionsUnion): SqlObjectState {\n  switch (action.type) {\n    case ActionTypes.LOAD_SQL_OBJECT_STRUCTURE: {\n      const payload = action.payload;\n      return {\n        ...state,\n        filters: {\n          limitRowsCount: state.filters.limitRowsCount,\n          skipRowsCount: 0,\n        },\n        structure: {...initStructure, ...payload},\n        currentState: {...initStructure, ...payload},\n        loading: Array.from(new Set([...state.loading, LoadingStates.STRUCTURE_LOAD]))\n      };\n    }\n\n    case ActionTypes.LOAD_SQL_OBJECT_DATA: {\n      return {\n        ...state,\n        data: null,\n        loading: Array.from(new Set([\n          ...state.loading.filter(l => l !== LoadingStates.DATA_SAVE), LoadingStates.DATA_LOAD\n        ]))\n      };\n    }\n\n    case ActionTypes.SAVE_SQL_OBJECT_DATA: {\n      return {\n        ...state,\n        loading: Array.from(new Set([...state.loading, LoadingStates.DATA_SAVE]))\n      };\n    }\n\n    case ActionTypes.LOAD_STATE_SQL_OBJECT: {\n      return {\n        ...state,\n        loading: [LoadingStates.STRUCTURE_LOAD, LoadingStates.DATA_LOAD]\n      };\n    }\n\n    case ActionTypes.LOADED_SQL_OBJECT_STRUCTURE: {\n      const structure = action.payload || {...initStructure};\n      return {\n        ...state,\n        structure,\n        loading: state.loading.filter(l => l !== LoadingStates.STRUCTURE_LOAD),\n        currentState: deepClone(structure)\n      };\n    }\n\n    case ActionTypes.LOADED_SQL_OBJECT_DATA: {\n      const payload = action.payload;\n      const data = payload;\n\n      return {\n        ...state,\n        data,\n        loading: state.loading.filter(l => l !== LoadingStates.DATA_LOAD),\n        changedData: null\n      };\n    }\n\n    case ActionTypes.UPDATE_SQL_OBJECT: {\n      return {\n        ...state,\n        currentState: action.payload\n      };\n    }\n\n    case ActionTypes.UPDATE_SQL_OBJECT_DATA: {\n      return {\n        ...state,\n        changedData: action.payload\n      };\n    }\n\n    case ActionTypes.REFRESH_SQL_OBJECT: {\n      const { structure } = state;\n      return {\n        ...state,\n        changedData: null,\n        currentState: deepClone(structure)\n      };\n    }\n\n    case ActionTypes.SET_SQL_DATA_FILTERS: {\n      return {\n        ...state,\n        filters: {\n          limitRowsCount: state.filters.limitRowsCount,\n          ...action.payload,\n        },\n      };\n    }\n\n    case ActionTypes.SET_SQL_DATA_ROWS_COUNT: {\n      return {\n        ...state,\n        rowsCount: action.payload\n      };\n    }\n\n    case ActionTypes.SET_SQL_DATA_FILTER_PROP: {\n      return {\n        ...state,\n        filters: {\n          ...state.filters,\n          ...action.payload\n        }\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { ActionsUnion, ActionTypes } from '../actions/sql-objects';\nimport { SqlObject, DBConnection } from 'src/app/shared/models';\n\nexport interface SqlObjectsState {\n  list: SqlObject[];\n}\n\nconst initState: SqlObjectsState = {\n  list: []\n};\n\nexport function sqlObjectsReducer(state: SqlObjectsState = initState, action: ActionsUnion): SqlObjectsState {\n  switch (action.type) {\n    case ActionTypes.LOADED_SQL_OBJECTS: {\n      const payload = action.payload;\n      return {\n        ...state,\n        list: payload\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport interface ConnectionsState {\n  list: DBConnection[];\n  current: string;\n}\n\nconst initConnections: ConnectionsState = {\n  list: [],\n  current: null\n};\n\nexport function connectonsReducer(state: ConnectionsState = initConnections, action: ActionsUnion) {\n  switch (action.type) {\n    case ActionTypes.SELECT_CONNECTION: {\n      const payload = action.payload;\n      return {\n        ...state,\n        current: payload\n      };\n    }\n\n    case ActionTypes.LOADED_CONNECTIONS: {\n      const payload = action.payload;\n\n      return {\n        ...state,\n        list: payload\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\n\nimport { DBManagerState } from '../index';\nimport { SqlObjectsState, ConnectionsState } from '../reducers/sql-objects';\nimport * as fromRouter from '@ngrx/router-store';\n\nexport * from './sql-object';\n\nexport const selectSqlObjects = (state: DBManagerState) => {\n  return state.sqlObjects;\n};\n\nexport const selectConnections = (state: DBManagerState) => {\n  return state.dbConnections;\n};\n\nexport const selectSqlObjectsList = createSelector(\n  selectSqlObjects,\n  (state: SqlObjectsState) => state.list);\n\nexport const selectConnectionsList = createSelector(\n  selectConnections,\n  (state: ConnectionsState) => state.list);\n\nexport const selectConnectionName = createSelector(\n  selectConnections,\n  (state: ConnectionsState) => state.current);\n\nexport const selectRouter = createFeatureSelector<DBManagerState, fromRouter.RouterReducerState<any>>('router');\n\nexport const {\n  selectQueryParams,    // select the current route query params\n  selectQueryParam,     // factory function to select a query param\n  selectRouteParams,    // select the current route params\n  selectRouteParam,     // factory function to select a route param\n  selectRouteData,      // select the current route data\n  selectUrl,            // select the current url\n} = fromRouter.getSelectors(selectRouter);\n\nexport const selectRouterParams = createSelector(\n  selectRouter,\n  (state: fromRouter.RouterReducerState<any>, props: string[] = null) => {\n    if (!state.state) {\n      return {};\n    }\n    let route = state.state.root;\n    let params = {...route.params};\n\n    while (route.firstChild) {\n      route = route.firstChild;\n      params = {...params, ...route.params};\n    }\n\n    if (!props) {\n      return params;\n    }\n\n    return Object.entries(params).reduce((prev, [prop, val]) => {\n      if (props.includes(prop)) {\n        prev[prop] = val;\n      }\n      return prev;\n    }, {});\n  });\n\nexport const selectRouterParam = createSelector(\n  selectRouterParams,\n  (params: object, param: string) => params[param]);\n\n\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\n\nimport { DBManagerState } from '../index';\nimport { SqlObjectState } from '../reducers/sql-object';\nimport { compareSqlObjects } from 'src/app/shared';\nimport { LoadingMessages } from '../../models';\n\nexport const selectSqlObject = createFeatureSelector<DBManagerState, SqlObjectState>('sqlObject');\n\nexport const selectSqlObjectStructure = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => state.structure);\n\nexport const selectSqlObjectData = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => state.data);\n\nexport const selectSqlObjectFieldsState = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => state.currentState.fields);\n\nexport const selectIsChangedSqlObjectStructure = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => !compareSqlObjects(state.structure, state.currentState));\n\nexport const selectSqlObjectState = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => state.currentState);\n\nexport const selectSqlObjectLoading = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => state.loading);\n\nexport const selectIsChangedSqlObjectData = createSelector(\n  selectSqlObject,\n  ({changedData}: SqlObjectState) => {\n    return Boolean(changedData && changedData.length);\n  });\n\nexport const selectSqlObjectLoadingMessages = createSelector(\n  selectSqlObjectLoading,\n    ((loading) => {\n      if (loading.length) {\n        return {\n          messages: loading.map(item => LoadingMessages[item])\n        };\n      }\n      return null;\n    }));\n\nexport const selectSqlObjectRowsCount = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => state.rowsCount);\n\nexport const selectSqlObjectLimitRows = createSelector(\n  selectSqlObject,\n  (state: SqlObjectState) => state.filters.limitRowsCount);\n","import { TableColumn, SQLDataTypes, SqlField, SqlPrimaryKey, SqlTypesSizes } from 'src/app/shared/models';\nimport { ObjectType } from './models';\n\nexport const filterItems = (items: Array<any>): Array<any> =>\n  items.map(i => typeof i !== 'object' ? {fieldName: i} : i).filter(f => f.fieldName);\n\nexport function getFormattedColumns(items: Array<any>): TableColumn[] {\n  return filterItems(items).map(f => ({\n    fieldName: f.fieldName,\n    dataType: f.dataType || SQLDataTypes.NVARCHAR,\n    size: getDefaultSize(f),\n    isKey: f.isKey || false,\n    isNullable: f.isNullable || true\n  }));\n}\n\nexport function getFormattedFields(items: Array<any>): SqlField[] {\n  return filterItems(items).map(f => ({\n    fieldName: f.fieldName,\n    dataType: f.dataType || SQLDataTypes.NVARCHAR,\n    size: getDefaultSize(f),\n    isNullable: f.isNullable || true\n  }));\n}\n\nexport function getPrimaryKeys(items: Array<any>): SqlPrimaryKey[] {\n  return items.filter(i => i.isKey).map(({fieldName}) => ({fieldName}));\n}\n\nfunction getDefaultSize(f) {\n  return (f.dataType === SQLDataTypes.NVARCHAR || !f.dataType) && !f.size ? SqlTypesSizes[SQLDataTypes.NVARCHAR] : f.size;\n}\n\nexport function formatToValidSqlName(str: string) {\n  return str.replace(/&|\\+|\\)|\\(|\\/|@|\\:|;|\\?|\\!|\\*|\\-/g, '').replace(/\\s/g, '_');\n}\n\nexport function getObjectTypeFromUrl(url: string = ''): ObjectType {\n  const match = url.match(/\\/database\\/[\\w-]+\\/([\\w-]+)\\/*/);\n\n  if (match && match[1].toLowerCase() === 'view') {\n    return ObjectType.View;\n  }\n  return ObjectType.Table;\n}\n","export const environment = {\n  production: true,\n  useHash: true,\n  // apiBaseUrl: 'https://localhost:44308/api'\n  apiBaseUrl: 'https://worksheets-web-api-test.azurewebsites.net/api',\n  version: require('../../package.json').version\n};\n","export const environment = {\n  production: true,\n  useHash: false,\n  // apiBaseUrl: 'https://localhost:44308/api'\n  apiBaseUrl: 'https://worksheets-web-api-test.azurewebsites.net/api',\n  version: require('../../package.json').version\n};\n"],"sourceRoot":""}